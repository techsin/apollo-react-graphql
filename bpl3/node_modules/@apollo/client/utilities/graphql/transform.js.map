{"version":3,"file":"transform.js","sources":["transform.js"],"sourcesContent":["import { __assign, __spreadArrays } from \"tslib\";\nimport { visit } from 'graphql/language/visitor';\nimport { invariant } from 'ts-invariant';\nimport { checkDocument, getOperationDefinition, getFragmentDefinition, getFragmentDefinitions, getMainDefinition, } from './getFromAST';\nimport { filterInPlace } from '../common/filterInPlace';\nimport { isField, isInlineFragment } from './storeUtils';\nimport { createFragmentMap, } from './fragments';\nvar TYPENAME_FIELD = {\n    kind: 'Field',\n    name: {\n        kind: 'Name',\n        value: '__typename',\n    },\n};\nfunction isEmpty(op, fragments) {\n    return op.selectionSet.selections.every(function (selection) {\n        return selection.kind === 'FragmentSpread' &&\n            isEmpty(fragments[selection.name.value], fragments);\n    });\n}\nfunction nullIfDocIsEmpty(doc) {\n    return isEmpty(getOperationDefinition(doc) || getFragmentDefinition(doc), createFragmentMap(getFragmentDefinitions(doc)))\n        ? null\n        : doc;\n}\nfunction getDirectiveMatcher(directives) {\n    return function directiveMatcher(directive) {\n        return directives.some(function (dir) {\n            return (dir.name && dir.name === directive.name.value) ||\n                (dir.test && dir.test(directive));\n        });\n    };\n}\nexport function removeDirectivesFromDocument(directives, doc) {\n    var variablesInUse = Object.create(null);\n    var variablesToRemove = [];\n    var fragmentSpreadsInUse = Object.create(null);\n    var fragmentSpreadsToRemove = [];\n    var modifiedDoc = nullIfDocIsEmpty(visit(doc, {\n        Variable: {\n            enter: function (node, _key, parent) {\n                if (parent.kind !== 'VariableDefinition') {\n                    variablesInUse[node.name.value] = true;\n                }\n            },\n        },\n        Field: {\n            enter: function (node) {\n                if (directives && node.directives) {\n                    var shouldRemoveField = directives.some(function (directive) { return directive.remove; });\n                    if (shouldRemoveField &&\n                        node.directives &&\n                        node.directives.some(getDirectiveMatcher(directives))) {\n                        if (node.arguments) {\n                            node.arguments.forEach(function (arg) {\n                                if (arg.value.kind === 'Variable') {\n                                    variablesToRemove.push({\n                                        name: arg.value.name.value,\n                                    });\n                                }\n                            });\n                        }\n                        if (node.selectionSet) {\n                            getAllFragmentSpreadsFromSelectionSet(node.selectionSet).forEach(function (frag) {\n                                fragmentSpreadsToRemove.push({\n                                    name: frag.name.value,\n                                });\n                            });\n                        }\n                        return null;\n                    }\n                }\n            },\n        },\n        FragmentSpread: {\n            enter: function (node) {\n                fragmentSpreadsInUse[node.name.value] = true;\n            },\n        },\n        Directive: {\n            enter: function (node) {\n                if (getDirectiveMatcher(directives)(node)) {\n                    return null;\n                }\n            },\n        },\n    }));\n    if (modifiedDoc &&\n        filterInPlace(variablesToRemove, function (v) { return !variablesInUse[v.name]; }).length) {\n        modifiedDoc = removeArgumentsFromDocument(variablesToRemove, modifiedDoc);\n    }\n    if (modifiedDoc &&\n        filterInPlace(fragmentSpreadsToRemove, function (fs) { return !fragmentSpreadsInUse[fs.name]; })\n            .length) {\n        modifiedDoc = removeFragmentSpreadFromDocument(fragmentSpreadsToRemove, modifiedDoc);\n    }\n    return modifiedDoc;\n}\nexport function addTypenameToDocument(doc) {\n    return visit(checkDocument(doc), {\n        SelectionSet: {\n            enter: function (node, _key, parent) {\n                if (parent &&\n                    parent.kind === 'OperationDefinition') {\n                    return;\n                }\n                var selections = node.selections;\n                if (!selections) {\n                    return;\n                }\n                var skip = selections.some(function (selection) {\n                    return (isField(selection) &&\n                        (selection.name.value === '__typename' ||\n                            selection.name.value.lastIndexOf('__', 0) === 0));\n                });\n                if (skip) {\n                    return;\n                }\n                var field = parent;\n                if (isField(field) &&\n                    field.directives &&\n                    field.directives.some(function (d) { return d.name.value === 'export'; })) {\n                    return;\n                }\n                return __assign(__assign({}, node), { selections: __spreadArrays(selections, [TYPENAME_FIELD]) });\n            },\n        },\n    });\n}\nvar connectionRemoveConfig = {\n    test: function (directive) {\n        var willRemove = directive.name.value === 'connection';\n        if (willRemove) {\n            if (!directive.arguments ||\n                !directive.arguments.some(function (arg) { return arg.name.value === 'key'; })) {\n                invariant.warn('Removing an @connection directive even though it does not have a key. ' +\n                    'You may want to use the key parameter to specify a store key.');\n            }\n        }\n        return willRemove;\n    },\n};\nexport function removeConnectionDirectiveFromDocument(doc) {\n    return removeDirectivesFromDocument([connectionRemoveConfig], checkDocument(doc));\n}\nfunction hasDirectivesInSelectionSet(directives, selectionSet, nestedCheck) {\n    if (nestedCheck === void 0) { nestedCheck = true; }\n    return (selectionSet &&\n        selectionSet.selections &&\n        selectionSet.selections.some(function (selection) {\n            return hasDirectivesInSelection(directives, selection, nestedCheck);\n        }));\n}\nfunction hasDirectivesInSelection(directives, selection, nestedCheck) {\n    if (nestedCheck === void 0) { nestedCheck = true; }\n    if (!isField(selection)) {\n        return true;\n    }\n    if (!selection.directives) {\n        return false;\n    }\n    return (selection.directives.some(getDirectiveMatcher(directives)) ||\n        (nestedCheck &&\n            hasDirectivesInSelectionSet(directives, selection.selectionSet, nestedCheck)));\n}\nfunction getArgumentMatcher(config) {\n    return function argumentMatcher(argument) {\n        return config.some(function (aConfig) {\n            return argument.value &&\n                argument.value.kind === 'Variable' &&\n                argument.value.name &&\n                (aConfig.name === argument.value.name.value ||\n                    (aConfig.test && aConfig.test(argument)));\n        });\n    };\n}\nexport function removeArgumentsFromDocument(config, doc) {\n    var argMatcher = getArgumentMatcher(config);\n    return nullIfDocIsEmpty(visit(doc, {\n        OperationDefinition: {\n            enter: function (node) {\n                return __assign(__assign({}, node), { variableDefinitions: node.variableDefinitions.filter(function (varDef) {\n                        return !config.some(function (arg) { return arg.name === varDef.variable.name.value; });\n                    }) });\n            },\n        },\n        Field: {\n            enter: function (node) {\n                var shouldRemoveField = config.some(function (argConfig) { return argConfig.remove; });\n                if (shouldRemoveField) {\n                    var argMatchCount_1 = 0;\n                    node.arguments.forEach(function (arg) {\n                        if (argMatcher(arg)) {\n                            argMatchCount_1 += 1;\n                        }\n                    });\n                    if (argMatchCount_1 === 1) {\n                        return null;\n                    }\n                }\n            },\n        },\n        Argument: {\n            enter: function (node) {\n                if (argMatcher(node)) {\n                    return null;\n                }\n            },\n        },\n    }));\n}\nexport function removeFragmentSpreadFromDocument(config, doc) {\n    function enter(node) {\n        if (config.some(function (def) { return def.name === node.name.value; })) {\n            return null;\n        }\n    }\n    return nullIfDocIsEmpty(visit(doc, {\n        FragmentSpread: { enter: enter },\n        FragmentDefinition: { enter: enter },\n    }));\n}\nfunction getAllFragmentSpreadsFromSelectionSet(selectionSet) {\n    var allFragments = [];\n    selectionSet.selections.forEach(function (selection) {\n        if ((isField(selection) || isInlineFragment(selection)) &&\n            selection.selectionSet) {\n            getAllFragmentSpreadsFromSelectionSet(selection.selectionSet).forEach(function (frag) { return allFragments.push(frag); });\n        }\n        else if (selection.kind === 'FragmentSpread') {\n            allFragments.push(selection);\n        }\n    });\n    return allFragments;\n}\nexport function buildQueryFromSelectionSet(document) {\n    var definition = getMainDefinition(document);\n    var definitionOperation = definition.operation;\n    if (definitionOperation === 'query') {\n        return document;\n    }\n    var modifiedDoc = visit(document, {\n        OperationDefinition: {\n            enter: function (node) {\n                return __assign(__assign({}, node), { operation: 'query' });\n            },\n        },\n    });\n    return modifiedDoc;\n}\nexport function removeClientSetsFromDocument(document) {\n    checkDocument(document);\n    var modifiedDoc = removeDirectivesFromDocument([\n        {\n            test: function (directive) { return directive.name.value === 'client'; },\n            remove: true,\n        },\n    ], document);\n    if (modifiedDoc) {\n        modifiedDoc = visit(modifiedDoc, {\n            FragmentDefinition: {\n                enter: function (node) {\n                    if (node.selectionSet) {\n                        var isTypenameOnly = node.selectionSet.selections.every(function (selection) {\n                            return isField(selection) && selection.name.value === '__typename';\n                        });\n                        if (isTypenameOnly) {\n                            return null;\n                        }\n                    }\n                },\n            },\n        });\n    }\n    return modifiedDoc;\n}\n//# sourceMappingURL=transform.js.map"],"names":[],"mappings":"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"}