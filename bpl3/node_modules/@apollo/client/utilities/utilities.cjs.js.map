{"version":3,"file":"utilities.cjs.js","sources":["graphql/directives.js","graphql/fragments.js","common/assign.js","graphql/storeUtils.js","graphql/getFromAST.js","common/filterInPlace.js","graphql/transform.js"],"sourcesContent":["import { invariant } from 'ts-invariant';\nimport { visit } from 'graphql/language/visitor';\n\nfunction shouldInclude(selection, variables) {\n    if (variables === void 0) { variables = {}; }\n    return getInclusionDirectives(selection.directives).every(function (_a) {\n        var directive = _a.directive, ifArgument = _a.ifArgument;\n        var evaledValue = false;\n        if (ifArgument.value.kind === 'Variable') {\n            evaledValue = variables[ifArgument.value.name.value];\n            process.env.NODE_ENV === \"production\" ? invariant(evaledValue !== void 0, 42) : invariant(evaledValue !== void 0, \"Invalid variable referenced in @\" + directive.name.value + \" directive.\");\n        }\n        else {\n            evaledValue = ifArgument.value.value;\n        }\n        return directive.name.value === 'skip' ? !evaledValue : evaledValue;\n    });\n}\nfunction getDirectiveNames(doc) {\n    var names = [];\n    visit(doc, {\n        Directive: function (node) {\n            names.push(node.name.value);\n        },\n    });\n    return names;\n}\nfunction hasDirectives(names, doc) {\n    return getDirectiveNames(doc).some(function (name) { return names.indexOf(name) > -1; });\n}\nfunction hasClientExports(document) {\n    return (document &&\n        hasDirectives(['client'], document) &&\n        hasDirectives(['export'], document));\n}\nfunction isInclusionDirective(_a) {\n    var value = _a.name.value;\n    return value === 'skip' || value === 'include';\n}\nfunction getInclusionDirectives(directives) {\n    return directives ? directives.filter(isInclusionDirective).map(function (directive) {\n        var directiveArguments = directive.arguments;\n        var directiveName = directive.name.value;\n        process.env.NODE_ENV === \"production\" ? invariant(directiveArguments && directiveArguments.length === 1, 43) : invariant(directiveArguments && directiveArguments.length === 1, \"Incorrect number of arguments for the @\" + directiveName + \" directive.\");\n        var ifArgument = directiveArguments[0];\n        process.env.NODE_ENV === \"production\" ? invariant(ifArgument.name && ifArgument.name.value === 'if', 44) : invariant(ifArgument.name && ifArgument.name.value === 'if', \"Invalid argument for the @\" + directiveName + \" directive.\");\n        var ifValue = ifArgument.value;\n        process.env.NODE_ENV === \"production\" ? invariant(ifValue &&\n            (ifValue.kind === 'Variable' || ifValue.kind === 'BooleanValue'), 45) : invariant(ifValue &&\n            (ifValue.kind === 'Variable' || ifValue.kind === 'BooleanValue'), \"Argument for the @\" + directiveName + \" directive must be a variable or a boolean value.\");\n        return { directive: directive, ifArgument: ifArgument };\n    }) : [];\n}\n\nexport { getDirectiveNames, getInclusionDirectives, hasClientExports, hasDirectives, shouldInclude };\n//# sourceMappingURL=directives.js.map\n","import { __assign, __spreadArrays } from 'tslib';\nimport { InvariantError, invariant } from 'ts-invariant';\n\nfunction getFragmentQueryDocument(document, fragmentName) {\n    var actualFragmentName = fragmentName;\n    var fragments = [];\n    document.definitions.forEach(function (definition) {\n        if (definition.kind === 'OperationDefinition') {\n            throw process.env.NODE_ENV === \"production\" ? new InvariantError(46) : new InvariantError(\"Found a \" + definition.operation + \" operation\" + (definition.name ? \" named '\" + definition.name.value + \"'\" : '') + \". \" +\n                'No operations are allowed when using a fragment as a query. Only fragments are allowed.');\n        }\n        if (definition.kind === 'FragmentDefinition') {\n            fragments.push(definition);\n        }\n    });\n    if (typeof actualFragmentName === 'undefined') {\n        process.env.NODE_ENV === \"production\" ? invariant(fragments.length === 1, 47) : invariant(fragments.length === 1, \"Found \" + fragments.length + \" fragments. `fragmentName` must be provided when there is not exactly 1 fragment.\");\n        actualFragmentName = fragments[0].name.value;\n    }\n    var query = __assign(__assign({}, document), { definitions: __spreadArrays([\n            {\n                kind: 'OperationDefinition',\n                operation: 'query',\n                selectionSet: {\n                    kind: 'SelectionSet',\n                    selections: [\n                        {\n                            kind: 'FragmentSpread',\n                            name: {\n                                kind: 'Name',\n                                value: actualFragmentName,\n                            },\n                        },\n                    ],\n                },\n            }\n        ], document.definitions) });\n    return query;\n}\nfunction createFragmentMap(fragments) {\n    if (fragments === void 0) { fragments = []; }\n    var symTable = {};\n    fragments.forEach(function (fragment) {\n        symTable[fragment.name.value] = fragment;\n    });\n    return symTable;\n}\nfunction getFragmentFromSelection(selection, fragmentMap) {\n    switch (selection.kind) {\n        case 'InlineFragment':\n            return selection;\n        case 'FragmentSpread': {\n            var fragment = fragmentMap && fragmentMap[selection.name.value];\n            process.env.NODE_ENV === \"production\" ? invariant(fragment, 48) : invariant(fragment, \"No fragment named \" + selection.name.value + \".\");\n            return fragment;\n        }\n        default:\n            return null;\n    }\n}\n\nexport { createFragmentMap, getFragmentFromSelection, getFragmentQueryDocument };\n//# sourceMappingURL=fragments.js.map\n","function assign(target) {\n    var sources = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        sources[_i - 1] = arguments[_i];\n    }\n    sources.forEach(function (source) {\n        if (typeof source === 'undefined' || source === null) {\n            return;\n        }\n        Object.keys(source).forEach(function (key) {\n            target[key] = source[key];\n        });\n    });\n    return target;\n}\n\nexport { assign };\n//# sourceMappingURL=assign.js.map\n","import { InvariantError } from 'ts-invariant';\nimport stringify from 'fast-json-stable-stringify';\nimport { getFragmentFromSelection } from './fragments.js';\n\nfunction makeReference(id) {\n    return { __ref: String(id) };\n}\nfunction isReference(obj) {\n    return obj && typeof obj === 'object' && typeof obj.__ref === 'string';\n}\nfunction isStringValue(value) {\n    return value.kind === 'StringValue';\n}\nfunction isBooleanValue(value) {\n    return value.kind === 'BooleanValue';\n}\nfunction isIntValue(value) {\n    return value.kind === 'IntValue';\n}\nfunction isFloatValue(value) {\n    return value.kind === 'FloatValue';\n}\nfunction isVariable(value) {\n    return value.kind === 'Variable';\n}\nfunction isObjectValue(value) {\n    return value.kind === 'ObjectValue';\n}\nfunction isListValue(value) {\n    return value.kind === 'ListValue';\n}\nfunction isEnumValue(value) {\n    return value.kind === 'EnumValue';\n}\nfunction isNullValue(value) {\n    return value.kind === 'NullValue';\n}\nfunction valueToObjectRepresentation(argObj, name, value, variables) {\n    if (isIntValue(value) || isFloatValue(value)) {\n        argObj[name.value] = Number(value.value);\n    }\n    else if (isBooleanValue(value) || isStringValue(value)) {\n        argObj[name.value] = value.value;\n    }\n    else if (isObjectValue(value)) {\n        var nestedArgObj_1 = {};\n        value.fields.map(function (obj) {\n            return valueToObjectRepresentation(nestedArgObj_1, obj.name, obj.value, variables);\n        });\n        argObj[name.value] = nestedArgObj_1;\n    }\n    else if (isVariable(value)) {\n        var variableValue = (variables || {})[value.name.value];\n        argObj[name.value] = variableValue;\n    }\n    else if (isListValue(value)) {\n        argObj[name.value] = value.values.map(function (listValue) {\n            var nestedArgArrayObj = {};\n            valueToObjectRepresentation(nestedArgArrayObj, name, listValue, variables);\n            return nestedArgArrayObj[name.value];\n        });\n    }\n    else if (isEnumValue(value)) {\n        argObj[name.value] = value.value;\n    }\n    else if (isNullValue(value)) {\n        argObj[name.value] = null;\n    }\n    else {\n        throw process.env.NODE_ENV === \"production\" ? new InvariantError(36) : new InvariantError(\"The inline argument \\\"\" + name.value + \"\\\" of kind \\\"\" + value.kind + \"\\\"\" +\n            'is not supported. Use variables instead of inline arguments to ' +\n            'overcome this limitation.');\n    }\n}\nfunction storeKeyNameFromField(field, variables) {\n    var directivesObj = null;\n    if (field.directives) {\n        directivesObj = {};\n        field.directives.forEach(function (directive) {\n            directivesObj[directive.name.value] = {};\n            if (directive.arguments) {\n                directive.arguments.forEach(function (_a) {\n                    var name = _a.name, value = _a.value;\n                    return valueToObjectRepresentation(directivesObj[directive.name.value], name, value, variables);\n                });\n            }\n        });\n    }\n    var argObj = null;\n    if (field.arguments && field.arguments.length) {\n        argObj = {};\n        field.arguments.forEach(function (_a) {\n            var name = _a.name, value = _a.value;\n            return valueToObjectRepresentation(argObj, name, value, variables);\n        });\n    }\n    return getStoreKeyName(field.name.value, argObj, directivesObj);\n}\nvar KNOWN_DIRECTIVES = [\n    'connection',\n    'include',\n    'skip',\n    'client',\n    'rest',\n    'export',\n];\nfunction getStoreKeyName(fieldName, args, directives) {\n    if (directives &&\n        directives['connection'] &&\n        directives['connection']['key']) {\n        if (directives['connection']['filter'] &&\n            directives['connection']['filter'].length > 0) {\n            var filterKeys = directives['connection']['filter']\n                ? directives['connection']['filter']\n                : [];\n            filterKeys.sort();\n            var queryArgs_1 = args;\n            var filteredArgs_1 = {};\n            filterKeys.forEach(function (key) {\n                filteredArgs_1[key] = queryArgs_1[key];\n            });\n            return directives['connection']['key'] + \"(\" + JSON.stringify(filteredArgs_1) + \")\";\n        }\n        else {\n            return directives['connection']['key'];\n        }\n    }\n    var completeFieldName = fieldName;\n    if (args) {\n        var stringifiedArgs = stringify(args);\n        completeFieldName += \"(\" + stringifiedArgs + \")\";\n    }\n    if (directives) {\n        Object.keys(directives).forEach(function (key) {\n            if (KNOWN_DIRECTIVES.indexOf(key) !== -1)\n                return;\n            if (directives[key] && Object.keys(directives[key]).length) {\n                completeFieldName += \"@\" + key + \"(\" + JSON.stringify(directives[key]) + \")\";\n            }\n            else {\n                completeFieldName += \"@\" + key;\n            }\n        });\n    }\n    return completeFieldName;\n}\nfunction argumentsObjectFromField(field, variables) {\n    if (field.arguments && field.arguments.length) {\n        var argObj_1 = {};\n        field.arguments.forEach(function (_a) {\n            var name = _a.name, value = _a.value;\n            return valueToObjectRepresentation(argObj_1, name, value, variables);\n        });\n        return argObj_1;\n    }\n    return null;\n}\nfunction resultKeyNameFromField(field) {\n    return field.alias ? field.alias.value : field.name.value;\n}\nfunction getTypenameFromResult(result, selectionSet, fragmentMap) {\n    if (typeof result.__typename === 'string') {\n        return result.__typename;\n    }\n    for (var _i = 0, _a = selectionSet.selections; _i < _a.length; _i++) {\n        var selection = _a[_i];\n        if (isField(selection)) {\n            if (selection.name.value === '__typename') {\n                return result[resultKeyNameFromField(selection)];\n            }\n        }\n        else {\n            var typename = getTypenameFromResult(result, getFragmentFromSelection(selection, fragmentMap).selectionSet, fragmentMap);\n            if (typeof typename === 'string') {\n                return typename;\n            }\n        }\n    }\n}\nfunction isField(selection) {\n    return selection.kind === 'Field';\n}\nfunction isInlineFragment(selection) {\n    return selection.kind === 'InlineFragment';\n}\n\nexport { argumentsObjectFromField, getStoreKeyName, getTypenameFromResult, isField, isInlineFragment, isReference, makeReference, resultKeyNameFromField, storeKeyNameFromField, valueToObjectRepresentation };\n//# sourceMappingURL=storeUtils.js.map\n","import { __spreadArrays } from 'tslib';\nimport { InvariantError, invariant } from 'ts-invariant';\nimport { assign } from '../common/assign.js';\nimport { valueToObjectRepresentation } from './storeUtils.js';\n\nfunction checkDocument(doc) {\n    process.env.NODE_ENV === \"production\" ? invariant(doc && doc.kind === 'Document', 12) : invariant(doc && doc.kind === 'Document', \"Expecting a parsed GraphQL document. Perhaps you need to wrap the query string in a \\\"gql\\\" tag? http://docs.apollostack.com/apollo-client/core.html#gql\");\n    var operations = doc.definitions\n        .filter(function (d) { return d.kind !== 'FragmentDefinition'; })\n        .map(function (definition) {\n        if (definition.kind !== 'OperationDefinition') {\n            throw process.env.NODE_ENV === \"production\" ? new InvariantError(13) : new InvariantError(\"Schema type definitions not allowed in queries. Found: \\\"\" + definition.kind + \"\\\"\");\n        }\n        return definition;\n    });\n    process.env.NODE_ENV === \"production\" ? invariant(operations.length <= 1, 14) : invariant(operations.length <= 1, \"Ambiguous GraphQL document: contains \" + operations.length + \" operations\");\n    return doc;\n}\nfunction getOperationDefinition(doc) {\n    checkDocument(doc);\n    return doc.definitions.filter(function (definition) { return definition.kind === 'OperationDefinition'; })[0];\n}\nfunction getOperationName(doc) {\n    return (doc.definitions\n        .filter(function (definition) {\n        return definition.kind === 'OperationDefinition' && definition.name;\n    })\n        .map(function (x) { return x.name.value; })[0] || null);\n}\nfunction getFragmentDefinitions(doc) {\n    return doc.definitions.filter(function (definition) { return definition.kind === 'FragmentDefinition'; });\n}\nfunction getQueryDefinition(doc) {\n    var queryDef = getOperationDefinition(doc);\n    process.env.NODE_ENV === \"production\" ? invariant(queryDef && queryDef.operation === 'query', 15) : invariant(queryDef && queryDef.operation === 'query', 'Must contain a query definition.');\n    return queryDef;\n}\nfunction getFragmentDefinition(doc) {\n    process.env.NODE_ENV === \"production\" ? invariant(doc.kind === 'Document', 16) : invariant(doc.kind === 'Document', \"Expecting a parsed GraphQL document. Perhaps you need to wrap the query string in a \\\"gql\\\" tag? http://docs.apollostack.com/apollo-client/core.html#gql\");\n    process.env.NODE_ENV === \"production\" ? invariant(doc.definitions.length <= 1, 17) : invariant(doc.definitions.length <= 1, 'Fragment must have exactly one definition.');\n    var fragmentDef = doc.definitions[0];\n    process.env.NODE_ENV === \"production\" ? invariant(fragmentDef.kind === 'FragmentDefinition', 18) : invariant(fragmentDef.kind === 'FragmentDefinition', 'Must be a fragment definition.');\n    return fragmentDef;\n}\nfunction getMainDefinition(queryDoc) {\n    checkDocument(queryDoc);\n    var fragmentDefinition;\n    for (var _i = 0, _a = queryDoc.definitions; _i < _a.length; _i++) {\n        var definition = _a[_i];\n        if (definition.kind === 'OperationDefinition') {\n            var operation = definition.operation;\n            if (operation === 'query' ||\n                operation === 'mutation' ||\n                operation === 'subscription') {\n                return definition;\n            }\n        }\n        if (definition.kind === 'FragmentDefinition' && !fragmentDefinition) {\n            fragmentDefinition = definition;\n        }\n    }\n    if (fragmentDefinition) {\n        return fragmentDefinition;\n    }\n    throw process.env.NODE_ENV === \"production\" ? new InvariantError(19) : new InvariantError('Expected a parsed GraphQL query with a query, mutation, subscription, or a fragment.');\n}\nfunction getDefaultValues(definition) {\n    if (definition &&\n        definition.variableDefinitions &&\n        definition.variableDefinitions.length) {\n        var defaultValues = definition.variableDefinitions\n            .filter(function (_a) {\n            var defaultValue = _a.defaultValue;\n            return defaultValue;\n        })\n            .map(function (_a) {\n            var variable = _a.variable, defaultValue = _a.defaultValue;\n            var defaultValueObj = {};\n            valueToObjectRepresentation(defaultValueObj, variable.name, defaultValue);\n            return defaultValueObj;\n        });\n        return assign.apply(void 0, __spreadArrays([{}], defaultValues));\n    }\n    return {};\n}\n\nexport { checkDocument, getDefaultValues, getFragmentDefinition, getFragmentDefinitions, getMainDefinition, getOperationDefinition, getOperationName, getQueryDefinition };\n//# sourceMappingURL=getFromAST.js.map\n","function filterInPlace(array, test, context) {\n    var target = 0;\n    array.forEach(function (elem, i) {\n        if (test.call(this, elem, i, array)) {\n            array[target++] = elem;\n        }\n    }, context);\n    array.length = target;\n    return array;\n}\n\nexport { filterInPlace };\n//# sourceMappingURL=filterInPlace.js.map\n","import { __assign, __spreadArrays } from 'tslib';\nimport { invariant } from 'ts-invariant';\nimport { createFragmentMap } from './fragments.js';\nimport { isField, isInlineFragment } from './storeUtils.js';\nimport { checkDocument, getFragmentDefinitions, getOperationDefinition, getFragmentDefinition, getMainDefinition } from './getFromAST.js';\nimport { visit } from 'graphql/language/visitor';\nimport { filterInPlace } from '../common/filterInPlace.js';\n\nvar TYPENAME_FIELD = {\n    kind: 'Field',\n    name: {\n        kind: 'Name',\n        value: '__typename',\n    },\n};\nfunction isEmpty(op, fragments) {\n    return op.selectionSet.selections.every(function (selection) {\n        return selection.kind === 'FragmentSpread' &&\n            isEmpty(fragments[selection.name.value], fragments);\n    });\n}\nfunction nullIfDocIsEmpty(doc) {\n    return isEmpty(getOperationDefinition(doc) || getFragmentDefinition(doc), createFragmentMap(getFragmentDefinitions(doc)))\n        ? null\n        : doc;\n}\nfunction getDirectiveMatcher(directives) {\n    return function directiveMatcher(directive) {\n        return directives.some(function (dir) {\n            return (dir.name && dir.name === directive.name.value) ||\n                (dir.test && dir.test(directive));\n        });\n    };\n}\nfunction removeDirectivesFromDocument(directives, doc) {\n    var variablesInUse = Object.create(null);\n    var variablesToRemove = [];\n    var fragmentSpreadsInUse = Object.create(null);\n    var fragmentSpreadsToRemove = [];\n    var modifiedDoc = nullIfDocIsEmpty(visit(doc, {\n        Variable: {\n            enter: function (node, _key, parent) {\n                if (parent.kind !== 'VariableDefinition') {\n                    variablesInUse[node.name.value] = true;\n                }\n            },\n        },\n        Field: {\n            enter: function (node) {\n                if (directives && node.directives) {\n                    var shouldRemoveField = directives.some(function (directive) { return directive.remove; });\n                    if (shouldRemoveField &&\n                        node.directives &&\n                        node.directives.some(getDirectiveMatcher(directives))) {\n                        if (node.arguments) {\n                            node.arguments.forEach(function (arg) {\n                                if (arg.value.kind === 'Variable') {\n                                    variablesToRemove.push({\n                                        name: arg.value.name.value,\n                                    });\n                                }\n                            });\n                        }\n                        if (node.selectionSet) {\n                            getAllFragmentSpreadsFromSelectionSet(node.selectionSet).forEach(function (frag) {\n                                fragmentSpreadsToRemove.push({\n                                    name: frag.name.value,\n                                });\n                            });\n                        }\n                        return null;\n                    }\n                }\n            },\n        },\n        FragmentSpread: {\n            enter: function (node) {\n                fragmentSpreadsInUse[node.name.value] = true;\n            },\n        },\n        Directive: {\n            enter: function (node) {\n                if (getDirectiveMatcher(directives)(node)) {\n                    return null;\n                }\n            },\n        },\n    }));\n    if (modifiedDoc &&\n        filterInPlace(variablesToRemove, function (v) { return !variablesInUse[v.name]; }).length) {\n        modifiedDoc = removeArgumentsFromDocument(variablesToRemove, modifiedDoc);\n    }\n    if (modifiedDoc &&\n        filterInPlace(fragmentSpreadsToRemove, function (fs) { return !fragmentSpreadsInUse[fs.name]; })\n            .length) {\n        modifiedDoc = removeFragmentSpreadFromDocument(fragmentSpreadsToRemove, modifiedDoc);\n    }\n    return modifiedDoc;\n}\nfunction addTypenameToDocument(doc) {\n    return visit(checkDocument(doc), {\n        SelectionSet: {\n            enter: function (node, _key, parent) {\n                if (parent &&\n                    parent.kind === 'OperationDefinition') {\n                    return;\n                }\n                var selections = node.selections;\n                if (!selections) {\n                    return;\n                }\n                var skip = selections.some(function (selection) {\n                    return (isField(selection) &&\n                        (selection.name.value === '__typename' ||\n                            selection.name.value.lastIndexOf('__', 0) === 0));\n                });\n                if (skip) {\n                    return;\n                }\n                var field = parent;\n                if (isField(field) &&\n                    field.directives &&\n                    field.directives.some(function (d) { return d.name.value === 'export'; })) {\n                    return;\n                }\n                return __assign(__assign({}, node), { selections: __spreadArrays(selections, [TYPENAME_FIELD]) });\n            },\n        },\n    });\n}\nvar connectionRemoveConfig = {\n    test: function (directive) {\n        var willRemove = directive.name.value === 'connection';\n        if (willRemove) {\n            if (!directive.arguments ||\n                !directive.arguments.some(function (arg) { return arg.name.value === 'key'; })) {\n                process.env.NODE_ENV === \"production\" || invariant.warn('Removing an @connection directive even though it does not have a key. ' +\n                    'You may want to use the key parameter to specify a store key.');\n            }\n        }\n        return willRemove;\n    },\n};\nfunction removeConnectionDirectiveFromDocument(doc) {\n    return removeDirectivesFromDocument([connectionRemoveConfig], checkDocument(doc));\n}\nfunction getArgumentMatcher(config) {\n    return function argumentMatcher(argument) {\n        return config.some(function (aConfig) {\n            return argument.value &&\n                argument.value.kind === 'Variable' &&\n                argument.value.name &&\n                (aConfig.name === argument.value.name.value ||\n                    (aConfig.test && aConfig.test(argument)));\n        });\n    };\n}\nfunction removeArgumentsFromDocument(config, doc) {\n    var argMatcher = getArgumentMatcher(config);\n    return nullIfDocIsEmpty(visit(doc, {\n        OperationDefinition: {\n            enter: function (node) {\n                return __assign(__assign({}, node), { variableDefinitions: node.variableDefinitions.filter(function (varDef) {\n                        return !config.some(function (arg) { return arg.name === varDef.variable.name.value; });\n                    }) });\n            },\n        },\n        Field: {\n            enter: function (node) {\n                var shouldRemoveField = config.some(function (argConfig) { return argConfig.remove; });\n                if (shouldRemoveField) {\n                    var argMatchCount_1 = 0;\n                    node.arguments.forEach(function (arg) {\n                        if (argMatcher(arg)) {\n                            argMatchCount_1 += 1;\n                        }\n                    });\n                    if (argMatchCount_1 === 1) {\n                        return null;\n                    }\n                }\n            },\n        },\n        Argument: {\n            enter: function (node) {\n                if (argMatcher(node)) {\n                    return null;\n                }\n            },\n        },\n    }));\n}\nfunction removeFragmentSpreadFromDocument(config, doc) {\n    function enter(node) {\n        if (config.some(function (def) { return def.name === node.name.value; })) {\n            return null;\n        }\n    }\n    return nullIfDocIsEmpty(visit(doc, {\n        FragmentSpread: { enter: enter },\n        FragmentDefinition: { enter: enter },\n    }));\n}\nfunction getAllFragmentSpreadsFromSelectionSet(selectionSet) {\n    var allFragments = [];\n    selectionSet.selections.forEach(function (selection) {\n        if ((isField(selection) || isInlineFragment(selection)) &&\n            selection.selectionSet) {\n            getAllFragmentSpreadsFromSelectionSet(selection.selectionSet).forEach(function (frag) { return allFragments.push(frag); });\n        }\n        else if (selection.kind === 'FragmentSpread') {\n            allFragments.push(selection);\n        }\n    });\n    return allFragments;\n}\nfunction buildQueryFromSelectionSet(document) {\n    var definition = getMainDefinition(document);\n    var definitionOperation = definition.operation;\n    if (definitionOperation === 'query') {\n        return document;\n    }\n    var modifiedDoc = visit(document, {\n        OperationDefinition: {\n            enter: function (node) {\n                return __assign(__assign({}, node), { operation: 'query' });\n            },\n        },\n    });\n    return modifiedDoc;\n}\nfunction removeClientSetsFromDocument(document) {\n    checkDocument(document);\n    var modifiedDoc = removeDirectivesFromDocument([\n        {\n            test: function (directive) { return directive.name.value === 'client'; },\n            remove: true,\n        },\n    ], document);\n    if (modifiedDoc) {\n        modifiedDoc = visit(modifiedDoc, {\n            FragmentDefinition: {\n                enter: function (node) {\n                    if (node.selectionSet) {\n                        var isTypenameOnly = node.selectionSet.selections.every(function (selection) {\n                            return isField(selection) && selection.name.value === '__typename';\n                        });\n                        if (isTypenameOnly) {\n                            return null;\n                        }\n                    }\n                },\n            },\n        });\n    }\n    return modifiedDoc;\n}\n\nexport { addTypenameToDocument, buildQueryFromSelectionSet, removeArgumentsFromDocument, removeClientSetsFromDocument, removeConnectionDirectiveFromDocument, removeDirectivesFromDocument, removeFragmentSpreadFromDocument };\n//# sourceMappingURL=transform.js.map\n"],"names":["invariant","visit","InvariantError","__assign","__spreadArrays"],"mappings":";;;;;;;;;;;AAGA,SAAS,aAAa,CAAC,SAAS,EAAE,SAAS,EAAE;IACzC,IAAI,SAAS,KAAK,KAAK,CAAC,EAAE,EAAE,SAAS,GAAG,EAAE,CAAC,EAAE;IAC7C,OAAO,sBAAsB,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,UAAU,EAAE,EAAE;QACpE,IAAI,SAAS,GAAG,EAAE,CAAC,SAAS,EAAE,UAAU,GAAG,EAAE,CAAC,UAAU,CAAC;QACzD,IAAI,WAAW,GAAG,KAAK,CAAC;QACxB,IAAI,UAAU,CAAC,KAAK,CAAC,IAAI,KAAK,UAAU,EAAE;YACtC,WAAW,GAAG,SAAS,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACrD,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,GAAGA,qBAAS,CAAC,WAAW,KAAK,KAAK,CAAC,EAAE,EAAE,CAAC,GAAGA,qBAAS,CAAC,WAAW,KAAK,KAAK,CAAC,EAAE,kCAAkC,GAAG,SAAS,CAAC,IAAI,CAAC,KAAK,GAAG,aAAa,CAAC,CAAC;SAChM;aACI;YACD,WAAW,GAAG,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC;SACxC;QACD,OAAO,SAAS,CAAC,IAAI,CAAC,KAAK,KAAK,MAAM,GAAG,CAAC,WAAW,GAAG,WAAW,CAAC;KACvE,CAAC,CAAC;CACN;AACD,SAAS,iBAAiB,CAAC,GAAG,EAAE;IAC5B,IAAI,KAAK,GAAG,EAAE,CAAC;IACfC,aAAK,CAAC,GAAG,EAAE;QACP,SAAS,EAAE,UAAU,IAAI,EAAE;YACvB,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAC/B;KACJ,CAAC,CAAC;IACH,OAAO,KAAK,CAAC;CAChB;AACD,SAAS,aAAa,CAAC,KAAK,EAAE,GAAG,EAAE;IAC/B,OAAO,iBAAiB,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,UAAU,IAAI,EAAE,EAAE,OAAO,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;CAC5F;AACD,SAAS,gBAAgB,CAAC,QAAQ,EAAE;IAChC,QAAQ,QAAQ;QACZ,aAAa,CAAC,CAAC,QAAQ,CAAC,EAAE,QAAQ,CAAC;QACnC,aAAa,CAAC,CAAC,QAAQ,CAAC,EAAE,QAAQ,CAAC,EAAE;CAC5C;AACD,SAAS,oBAAoB,CAAC,EAAE,EAAE;IAC9B,IAAI,KAAK,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC;IAC1B,OAAO,KAAK,KAAK,MAAM,IAAI,KAAK,KAAK,SAAS,CAAC;CAClD;AACD,SAAS,sBAAsB,CAAC,UAAU,EAAE;IACxC,OAAO,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,oBAAoB,CAAC,CAAC,GAAG,CAAC,UAAU,SAAS,EAAE;QACjF,IAAI,kBAAkB,GAAG,SAAS,CAAC,SAAS,CAAC;QAC7C,IAAI,aAAa,GAAG,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC;QACzC,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,GAAGD,qBAAS,CAAC,kBAAkB,IAAI,kBAAkB,CAAC,MAAM,KAAK,CAAC,EAAE,EAAE,CAAC,GAAGA,qBAAS,CAAC,kBAAkB,IAAI,kBAAkB,CAAC,MAAM,KAAK,CAAC,EAAE,yCAAyC,GAAG,aAAa,GAAG,aAAa,CAAC,CAAC;QAC3P,IAAI,UAAU,GAAG,kBAAkB,CAAC,CAAC,CAAC,CAAC;QACvC,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,GAAGA,qBAAS,CAAC,UAAU,CAAC,IAAI,IAAI,UAAU,CAAC,IAAI,CAAC,KAAK,KAAK,IAAI,EAAE,EAAE,CAAC,GAAGA,qBAAS,CAAC,UAAU,CAAC,IAAI,IAAI,UAAU,CAAC,IAAI,CAAC,KAAK,KAAK,IAAI,EAAE,4BAA4B,GAAG,aAAa,GAAG,aAAa,CAAC,CAAC;QACtO,IAAI,OAAO,GAAG,UAAU,CAAC,KAAK,CAAC;QAC/B,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,GAAGA,qBAAS,CAAC,OAAO;aACpD,OAAO,CAAC,IAAI,KAAK,UAAU,IAAI,OAAO,CAAC,IAAI,KAAK,cAAc,CAAC,EAAE,EAAE,CAAC,GAAGA,qBAAS,CAAC,OAAO;aACxF,OAAO,CAAC,IAAI,KAAK,UAAU,IAAI,OAAO,CAAC,IAAI,KAAK,cAAc,CAAC,EAAE,oBAAoB,GAAG,aAAa,GAAG,mDAAmD,CAAC,CAAC;QAClK,OAAO,EAAE,SAAS,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,EAAE,CAAC;KAC3D,CAAC,GAAG,EAAE,CAAC;CACX;;ACjDD,SAAS,wBAAwB,CAAC,QAAQ,EAAE,YAAY,EAAE;IACtD,IAAI,kBAAkB,GAAG,YAAY,CAAC;IACtC,IAAI,SAAS,GAAG,EAAE,CAAC;IACnB,QAAQ,CAAC,WAAW,CAAC,OAAO,CAAC,UAAU,UAAU,EAAE;QAC/C,IAAI,UAAU,CAAC,IAAI,KAAK,qBAAqB,EAAE;YAC3C,MAAM,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,GAAG,IAAIE,0BAAc,CAAC,EAAE,CAAC,GAAG,IAAIA,0BAAc,CAAC,UAAU,GAAG,UAAU,CAAC,SAAS,GAAG,YAAY,IAAI,UAAU,CAAC,IAAI,GAAG,UAAU,GAAG,UAAU,CAAC,IAAI,CAAC,KAAK,GAAG,GAAG,GAAG,EAAE,CAAC,GAAG,IAAI;gBACjN,yFAAyF,CAAC,CAAC;SAClG;QACD,IAAI,UAAU,CAAC,IAAI,KAAK,oBAAoB,EAAE;YAC1C,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;SAC9B;KACJ,CAAC,CAAC;IACH,IAAI,OAAO,kBAAkB,KAAK,WAAW,EAAE;QAC3C,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,GAAGF,qBAAS,CAAC,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE,EAAE,CAAC,GAAGA,qBAAS,CAAC,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE,QAAQ,GAAG,SAAS,CAAC,MAAM,GAAG,mFAAmF,CAAC,CAAC;QACrO,kBAAkB,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC;KAChD;IACD,IAAI,KAAK,GAAGG,cAAQ,CAACA,cAAQ,CAAC,EAAE,EAAE,QAAQ,CAAC,EAAE,EAAE,WAAW,EAAEC,oBAAc,CAAC;YACnE;gBACI,IAAI,EAAE,qBAAqB;gBAC3B,SAAS,EAAE,OAAO;gBAClB,YAAY,EAAE;oBACV,IAAI,EAAE,cAAc;oBACpB,UAAU,EAAE;wBACR;4BACI,IAAI,EAAE,gBAAgB;4BACtB,IAAI,EAAE;gCACF,IAAI,EAAE,MAAM;gCACZ,KAAK,EAAE,kBAAkB;6BAC5B;yBACJ;qBACJ;iBACJ;aACJ;SACJ,EAAE,QAAQ,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;IAChC,OAAO,KAAK,CAAC;CAChB;AACD,SAAS,iBAAiB,CAAC,SAAS,EAAE;IAClC,IAAI,SAAS,KAAK,KAAK,CAAC,EAAE,EAAE,SAAS,GAAG,EAAE,CAAC,EAAE;IAC7C,IAAI,QAAQ,GAAG,EAAE,CAAC;IAClB,SAAS,CAAC,OAAO,CAAC,UAAU,QAAQ,EAAE;QAClC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,QAAQ,CAAC;KAC5C,CAAC,CAAC;IACH,OAAO,QAAQ,CAAC;CACnB;AACD,SAAS,wBAAwB,CAAC,SAAS,EAAE,WAAW,EAAE;IACtD,QAAQ,SAAS,CAAC,IAAI;QAClB,KAAK,gBAAgB;YACjB,OAAO,SAAS,CAAC;QACrB,KAAK,gBAAgB,EAAE;YACnB,IAAI,QAAQ,GAAG,WAAW,IAAI,WAAW,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAChE,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,GAAGJ,qBAAS,CAAC,QAAQ,EAAE,EAAE,CAAC,GAAGA,qBAAS,CAAC,QAAQ,EAAE,oBAAoB,GAAG,SAAS,CAAC,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC;YACzI,OAAO,QAAQ,CAAC;SACnB;QACD;YACI,OAAO,IAAI,CAAC;KACnB;CACJ;;AC3DD,SAAS,MAAM,CAAC,MAAM,EAAE;IACpB,IAAI,OAAO,GAAG,EAAE,CAAC;IACjB,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,SAAS,CAAC,MAAM,EAAE,EAAE,EAAE,EAAE;QAC1C,OAAO,CAAC,EAAE,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC,EAAE,CAAC,CAAC;KACnC;IACD,OAAO,CAAC,OAAO,CAAC,UAAU,MAAM,EAAE;QAC9B,IAAI,OAAO,MAAM,KAAK,WAAW,IAAI,MAAM,KAAK,IAAI,EAAE;YAClD,OAAO;SACV;QACD,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,UAAU,GAAG,EAAE;YACvC,MAAM,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;SAC7B,CAAC,CAAC;KACN,CAAC,CAAC;IACH,OAAO,MAAM,CAAC;CACjB;;ACVD,SAAS,aAAa,CAAC,EAAE,EAAE;IACvB,OAAO,EAAE,KAAK,EAAE,MAAM,CAAC,EAAE,CAAC,EAAE,CAAC;CAChC;AACD,SAAS,WAAW,CAAC,GAAG,EAAE;IACtB,OAAO,GAAG,IAAI,OAAO,GAAG,KAAK,QAAQ,IAAI,OAAO,GAAG,CAAC,KAAK,KAAK,QAAQ,CAAC;CAC1E;AACD,SAAS,aAAa,CAAC,KAAK,EAAE;IAC1B,OAAO,KAAK,CAAC,IAAI,KAAK,aAAa,CAAC;CACvC;AACD,SAAS,cAAc,CAAC,KAAK,EAAE;IAC3B,OAAO,KAAK,CAAC,IAAI,KAAK,cAAc,CAAC;CACxC;AACD,SAAS,UAAU,CAAC,KAAK,EAAE;IACvB,OAAO,KAAK,CAAC,IAAI,KAAK,UAAU,CAAC;CACpC;AACD,SAAS,YAAY,CAAC,KAAK,EAAE;IACzB,OAAO,KAAK,CAAC,IAAI,KAAK,YAAY,CAAC;CACtC;AACD,SAAS,UAAU,CAAC,KAAK,EAAE;IACvB,OAAO,KAAK,CAAC,IAAI,KAAK,UAAU,CAAC;CACpC;AACD,SAAS,aAAa,CAAC,KAAK,EAAE;IAC1B,OAAO,KAAK,CAAC,IAAI,KAAK,aAAa,CAAC;CACvC;AACD,SAAS,WAAW,CAAC,KAAK,EAAE;IACxB,OAAO,KAAK,CAAC,IAAI,KAAK,WAAW,CAAC;CACrC;AACD,SAAS,WAAW,CAAC,KAAK,EAAE;IACxB,OAAO,KAAK,CAAC,IAAI,KAAK,WAAW,CAAC;CACrC;AACD,SAAS,WAAW,CAAC,KAAK,EAAE;IACxB,OAAO,KAAK,CAAC,IAAI,KAAK,WAAW,CAAC;CACrC;AACD,SAAS,2BAA2B,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,EAAE;IACjE,IAAI,UAAU,CAAC,KAAK,CAAC,IAAI,YAAY,CAAC,KAAK,CAAC,EAAE;QAC1C,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;KAC5C;SACI,IAAI,cAAc,CAAC,KAAK,CAAC,IAAI,aAAa,CAAC,KAAK,CAAC,EAAE;QACpD,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC;KACpC;SACI,IAAI,aAAa,CAAC,KAAK,CAAC,EAAE;QAC3B,IAAI,cAAc,GAAG,EAAE,CAAC;QACxB,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,UAAU,GAAG,EAAE;YAC5B,OAAO,2BAA2B,CAAC,cAAc,EAAE,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;SACtF,CAAC,CAAC;QACH,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,cAAc,CAAC;KACvC;SACI,IAAI,UAAU,CAAC,KAAK,CAAC,EAAE;QACxB,IAAI,aAAa,GAAG,CAAC,SAAS,IAAI,EAAE,EAAE,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACxD,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,aAAa,CAAC;KACtC;SACI,IAAI,WAAW,CAAC,KAAK,CAAC,EAAE;QACzB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,GAAG,CAAC,UAAU,SAAS,EAAE;YACvD,IAAI,iBAAiB,GAAG,EAAE,CAAC;YAC3B,2BAA2B,CAAC,iBAAiB,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;YAC3E,OAAO,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACxC,CAAC,CAAC;KACN;SACI,IAAI,WAAW,CAAC,KAAK,CAAC,EAAE;QACzB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC;KACpC;SACI,IAAI,WAAW,CAAC,KAAK,CAAC,EAAE;QACzB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC;KAC7B;SACI;QACD,MAAM,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,GAAG,IAAIE,0BAAc,CAAC,EAAE,CAAC,GAAG,IAAIA,0BAAc,CAAC,wBAAwB,GAAG,IAAI,CAAC,KAAK,GAAG,eAAe,GAAG,KAAK,CAAC,IAAI,GAAG,IAAI;YACjK,iEAAiE;YACjE,2BAA2B,CAAC,CAAC;KACpC;CACJ;AACD,SAAS,qBAAqB,CAAC,KAAK,EAAE,SAAS,EAAE;IAC7C,IAAI,aAAa,GAAG,IAAI,CAAC;IACzB,IAAI,KAAK,CAAC,UAAU,EAAE;QAClB,aAAa,GAAG,EAAE,CAAC;QACnB,KAAK,CAAC,UAAU,CAAC,OAAO,CAAC,UAAU,SAAS,EAAE;YAC1C,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;YACzC,IAAI,SAAS,CAAC,SAAS,EAAE;gBACrB,SAAS,CAAC,SAAS,CAAC,OAAO,CAAC,UAAU,EAAE,EAAE;oBACtC,IAAI,IAAI,GAAG,EAAE,CAAC,IAAI,EAAE,KAAK,GAAG,EAAE,CAAC,KAAK,CAAC;oBACrC,OAAO,2BAA2B,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,CAAC,CAAC;iBACnG,CAAC,CAAC;aACN;SACJ,CAAC,CAAC;KACN;IACD,IAAI,MAAM,GAAG,IAAI,CAAC;IAClB,IAAI,KAAK,CAAC,SAAS,IAAI,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE;QAC3C,MAAM,GAAG,EAAE,CAAC;QACZ,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC,UAAU,EAAE,EAAE;YAClC,IAAI,IAAI,GAAG,EAAE,CAAC,IAAI,EAAE,KAAK,GAAG,EAAE,CAAC,KAAK,CAAC;YACrC,OAAO,2BAA2B,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,CAAC,CAAC;SACtE,CAAC,CAAC;KACN;IACD,OAAO,eAAe,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,aAAa,CAAC,CAAC;CACnE;AACD,IAAI,gBAAgB,GAAG;IACnB,YAAY;IACZ,SAAS;IACT,MAAM;IACN,QAAQ;IACR,MAAM;IACN,QAAQ;CACX,CAAC;AACF,SAAS,eAAe,CAAC,SAAS,EAAE,IAAI,EAAE,UAAU,EAAE;IAClD,IAAI,UAAU;QACV,UAAU,CAAC,YAAY,CAAC;QACxB,UAAU,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC,EAAE;QACjC,IAAI,UAAU,CAAC,YAAY,CAAC,CAAC,QAAQ,CAAC;YAClC,UAAU,CAAC,YAAY,CAAC,CAAC,QAAQ,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;YAC/C,IAAI,UAAU,GAAG,UAAU,CAAC,YAAY,CAAC,CAAC,QAAQ,CAAC;kBAC7C,UAAU,CAAC,YAAY,CAAC,CAAC,QAAQ,CAAC;kBAClC,EAAE,CAAC;YACT,UAAU,CAAC,IAAI,EAAE,CAAC;YAClB,IAAI,WAAW,GAAG,IAAI,CAAC;YACvB,IAAI,cAAc,GAAG,EAAE,CAAC;YACxB,UAAU,CAAC,OAAO,CAAC,UAAU,GAAG,EAAE;gBAC9B,cAAc,CAAC,GAAG,CAAC,GAAG,WAAW,CAAC,GAAG,CAAC,CAAC;aAC1C,CAAC,CAAC;YACH,OAAO,UAAU,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,GAAG,GAAG,CAAC;SACvF;aACI;YACD,OAAO,UAAU,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC,CAAC;SAC1C;KACJ;IACD,IAAI,iBAAiB,GAAG,SAAS,CAAC;IAClC,IAAI,IAAI,EAAE;QACN,IAAI,eAAe,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC;QACtC,iBAAiB,IAAI,GAAG,GAAG,eAAe,GAAG,GAAG,CAAC;KACpD;IACD,IAAI,UAAU,EAAE;QACZ,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,OAAO,CAAC,UAAU,GAAG,EAAE;YAC3C,IAAI,gBAAgB,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACpC,OAAO;YACX,IAAI,UAAU,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,EAAE;gBACxD,iBAAiB,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC;aAChF;iBACI;gBACD,iBAAiB,IAAI,GAAG,GAAG,GAAG,CAAC;aAClC;SACJ,CAAC,CAAC;KACN;IACD,OAAO,iBAAiB,CAAC;CAC5B;AACD,SAAS,wBAAwB,CAAC,KAAK,EAAE,SAAS,EAAE;IAChD,IAAI,KAAK,CAAC,SAAS,IAAI,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE;QAC3C,IAAI,QAAQ,GAAG,EAAE,CAAC;QAClB,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC,UAAU,EAAE,EAAE;YAClC,IAAI,IAAI,GAAG,EAAE,CAAC,IAAI,EAAE,KAAK,GAAG,EAAE,CAAC,KAAK,CAAC;YACrC,OAAO,2BAA2B,CAAC,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAE,SAAS,CAAC,CAAC;SACxE,CAAC,CAAC;QACH,OAAO,QAAQ,CAAC;KACnB;IACD,OAAO,IAAI,CAAC;CACf;AACD,SAAS,sBAAsB,CAAC,KAAK,EAAE;IACnC,OAAO,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC;CAC7D;AACD,SAAS,qBAAqB,CAAC,MAAM,EAAE,YAAY,EAAE,WAAW,EAAE;IAC9D,IAAI,OAAO,MAAM,CAAC,UAAU,KAAK,QAAQ,EAAE;QACvC,OAAO,MAAM,CAAC,UAAU,CAAC;KAC5B;IACD,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,YAAY,CAAC,UAAU,EAAE,EAAE,GAAG,EAAE,CAAC,MAAM,EAAE,EAAE,EAAE,EAAE;QACjE,IAAI,SAAS,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;QACvB,IAAI,OAAO,CAAC,SAAS,CAAC,EAAE;YACpB,IAAI,SAAS,CAAC,IAAI,CAAC,KAAK,KAAK,YAAY,EAAE;gBACvC,OAAO,MAAM,CAAC,sBAAsB,CAAC,SAAS,CAAC,CAAC,CAAC;aACpD;SACJ;aACI;YACD,IAAI,QAAQ,GAAG,qBAAqB,CAAC,MAAM,EAAE,wBAAwB,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC,YAAY,EAAE,WAAW,CAAC,CAAC;YACzH,IAAI,OAAO,QAAQ,KAAK,QAAQ,EAAE;gBAC9B,OAAO,QAAQ,CAAC;aACnB;SACJ;KACJ;CACJ;AACD,SAAS,OAAO,CAAC,SAAS,EAAE;IACxB,OAAO,SAAS,CAAC,IAAI,KAAK,OAAO,CAAC;CACrC;AACD,SAAS,gBAAgB,CAAC,SAAS,EAAE;IACjC,OAAO,SAAS,CAAC,IAAI,KAAK,gBAAgB,CAAC;CAC9C;;ACnLD,SAAS,aAAa,CAAC,GAAG,EAAE;IACxB,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,GAAGF,qBAAS,CAAC,GAAG,IAAI,GAAG,CAAC,IAAI,KAAK,UAAU,EAAE,EAAE,CAAC,GAAGA,qBAAS,CAAC,GAAG,IAAI,GAAG,CAAC,IAAI,KAAK,UAAU,EAAE,0JAA0J,CAAC,CAAC;IAC9R,IAAI,UAAU,GAAG,GAAG,CAAC,WAAW;SAC3B,MAAM,CAAC,UAAU,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC,IAAI,KAAK,oBAAoB,CAAC,EAAE,CAAC;SAChE,GAAG,CAAC,UAAU,UAAU,EAAE;QAC3B,IAAI,UAAU,CAAC,IAAI,KAAK,qBAAqB,EAAE;YAC3C,MAAM,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,GAAG,IAAIE,0BAAc,CAAC,EAAE,CAAC,GAAG,IAAIA,0BAAc,CAAC,2DAA2D,GAAG,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC;SACnL;QACD,OAAO,UAAU,CAAC;KACrB,CAAC,CAAC;IACH,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,GAAGF,qBAAS,CAAC,UAAU,CAAC,MAAM,IAAI,CAAC,EAAE,EAAE,CAAC,GAAGA,qBAAS,CAAC,UAAU,CAAC,MAAM,IAAI,CAAC,EAAE,uCAAuC,GAAG,UAAU,CAAC,MAAM,GAAG,aAAa,CAAC,CAAC;IAC/L,OAAO,GAAG,CAAC;CACd;AACD,SAAS,sBAAsB,CAAC,GAAG,EAAE;IACjC,aAAa,CAAC,GAAG,CAAC,CAAC;IACnB,OAAO,GAAG,CAAC,WAAW,CAAC,MAAM,CAAC,UAAU,UAAU,EAAE,EAAE,OAAO,UAAU,CAAC,IAAI,KAAK,qBAAqB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;CACjH;AACD,SAAS,gBAAgB,CAAC,GAAG,EAAE;IAC3B,QAAQ,GAAG,CAAC,WAAW;SAClB,MAAM,CAAC,UAAU,UAAU,EAAE;QAC9B,OAAO,UAAU,CAAC,IAAI,KAAK,qBAAqB,IAAI,UAAU,CAAC,IAAI,CAAC;KACvE,CAAC;SACG,GAAG,CAAC,UAAU,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,EAAE;CAC/D;AACD,SAAS,sBAAsB,CAAC,GAAG,EAAE;IACjC,OAAO,GAAG,CAAC,WAAW,CAAC,MAAM,CAAC,UAAU,UAAU,EAAE,EAAE,OAAO,UAAU,CAAC,IAAI,KAAK,oBAAoB,CAAC,EAAE,CAAC,CAAC;CAC7G;AACD,SAAS,kBAAkB,CAAC,GAAG,EAAE;IAC7B,IAAI,QAAQ,GAAG,sBAAsB,CAAC,GAAG,CAAC,CAAC;IAC3C,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,GAAGA,qBAAS,CAAC,QAAQ,IAAI,QAAQ,CAAC,SAAS,KAAK,OAAO,EAAE,EAAE,CAAC,GAAGA,qBAAS,CAAC,QAAQ,IAAI,QAAQ,CAAC,SAAS,KAAK,OAAO,EAAE,kCAAkC,CAAC,CAAC;IAC9L,OAAO,QAAQ,CAAC;CACnB;AACD,SAAS,qBAAqB,CAAC,GAAG,EAAE;IAChC,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,GAAGA,qBAAS,CAAC,GAAG,CAAC,IAAI,KAAK,UAAU,EAAE,EAAE,CAAC,GAAGA,qBAAS,CAAC,GAAG,CAAC,IAAI,KAAK,UAAU,EAAE,0JAA0J,CAAC,CAAC;IAChR,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,GAAGA,qBAAS,CAAC,GAAG,CAAC,WAAW,CAAC,MAAM,IAAI,CAAC,EAAE,EAAE,CAAC,GAAGA,qBAAS,CAAC,GAAG,CAAC,WAAW,CAAC,MAAM,IAAI,CAAC,EAAE,4CAA4C,CAAC,CAAC;IAC1K,IAAI,WAAW,GAAG,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;IACrC,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,GAAGA,qBAAS,CAAC,WAAW,CAAC,IAAI,KAAK,oBAAoB,EAAE,EAAE,CAAC,GAAGA,qBAAS,CAAC,WAAW,CAAC,IAAI,KAAK,oBAAoB,EAAE,gCAAgC,CAAC,CAAC;IAC1L,OAAO,WAAW,CAAC;CACtB;AACD,SAAS,iBAAiB,CAAC,QAAQ,EAAE;IACjC,aAAa,CAAC,QAAQ,CAAC,CAAC;IACxB,IAAI,kBAAkB,CAAC;IACvB,KAAK,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,QAAQ,CAAC,WAAW,EAAE,EAAE,GAAG,EAAE,CAAC,MAAM,EAAE,EAAE,EAAE,EAAE;QAC9D,IAAI,UAAU,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;QACxB,IAAI,UAAU,CAAC,IAAI,KAAK,qBAAqB,EAAE;YAC3C,IAAI,SAAS,GAAG,UAAU,CAAC,SAAS,CAAC;YACrC,IAAI,SAAS,KAAK,OAAO;gBACrB,SAAS,KAAK,UAAU;gBACxB,SAAS,KAAK,cAAc,EAAE;gBAC9B,OAAO,UAAU,CAAC;aACrB;SACJ;QACD,IAAI,UAAU,CAAC,IAAI,KAAK,oBAAoB,IAAI,CAAC,kBAAkB,EAAE;YACjE,kBAAkB,GAAG,UAAU,CAAC;SACnC;KACJ;IACD,IAAI,kBAAkB,EAAE;QACpB,OAAO,kBAAkB,CAAC;KAC7B;IACD,MAAM,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,GAAG,IAAIE,0BAAc,CAAC,EAAE,CAAC,GAAG,IAAIA,0BAAc,CAAC,sFAAsF,CAAC,CAAC;CACrL;AACD,SAAS,gBAAgB,CAAC,UAAU,EAAE;IAClC,IAAI,UAAU;QACV,UAAU,CAAC,mBAAmB;QAC9B,UAAU,CAAC,mBAAmB,CAAC,MAAM,EAAE;QACvC,IAAI,aAAa,GAAG,UAAU,CAAC,mBAAmB;aAC7C,MAAM,CAAC,UAAU,EAAE,EAAE;YACtB,IAAI,YAAY,GAAG,EAAE,CAAC,YAAY,CAAC;YACnC,OAAO,YAAY,CAAC;SACvB,CAAC;aACG,GAAG,CAAC,UAAU,EAAE,EAAE;YACnB,IAAI,QAAQ,GAAG,EAAE,CAAC,QAAQ,EAAE,YAAY,GAAG,EAAE,CAAC,YAAY,CAAC;YAC3D,IAAI,eAAe,GAAG,EAAE,CAAC;YACzB,2BAA2B,CAAC,eAAe,EAAE,QAAQ,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;YAC1E,OAAO,eAAe,CAAC;SAC1B,CAAC,CAAC;QACH,OAAO,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,EAAEE,oBAAc,CAAC,CAAC,EAAE,CAAC,EAAE,aAAa,CAAC,CAAC,CAAC;KACpE;IACD,OAAO,EAAE,CAAC;CACb;;ACpFD,SAAS,aAAa,CAAC,KAAK,EAAE,IAAI,EAAE,OAAO,EAAE;IACzC,IAAI,MAAM,GAAG,CAAC,CAAC;IACf,KAAK,CAAC,OAAO,CAAC,UAAU,IAAI,EAAE,CAAC,EAAE;QAC7B,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,KAAK,CAAC,EAAE;YACjC,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,IAAI,CAAC;SAC1B;KACJ,EAAE,OAAO,CAAC,CAAC;IACZ,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;IACtB,OAAO,KAAK,CAAC;CAChB;;ACDD,IAAI,cAAc,GAAG;IACjB,IAAI,EAAE,OAAO;IACb,IAAI,EAAE;QACF,IAAI,EAAE,MAAM;QACZ,KAAK,EAAE,YAAY;KACtB;CACJ,CAAC;AACF,SAAS,OAAO,CAAC,EAAE,EAAE,SAAS,EAAE;IAC5B,OAAO,EAAE,CAAC,YAAY,CAAC,UAAU,CAAC,KAAK,CAAC,UAAU,SAAS,EAAE;QACzD,OAAO,SAAS,CAAC,IAAI,KAAK,gBAAgB;YACtC,OAAO,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,SAAS,CAAC,CAAC;KAC3D,CAAC,CAAC;CACN;AACD,SAAS,gBAAgB,CAAC,GAAG,EAAE;IAC3B,OAAO,OAAO,CAAC,sBAAsB,CAAC,GAAG,CAAC,IAAI,qBAAqB,CAAC,GAAG,CAAC,EAAE,iBAAiB,CAAC,sBAAsB,CAAC,GAAG,CAAC,CAAC,CAAC;UACnH,IAAI;UACJ,GAAG,CAAC;CACb;AACD,SAAS,mBAAmB,CAAC,UAAU,EAAE;IACrC,OAAO,SAAS,gBAAgB,CAAC,SAAS,EAAE;QACxC,OAAO,UAAU,CAAC,IAAI,CAAC,UAAU,GAAG,EAAE;YAClC,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,GAAG,CAAC,IAAI,KAAK,SAAS,CAAC,IAAI,CAAC,KAAK;iBAChD,GAAG,CAAC,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;SACzC,CAAC,CAAC;KACN,CAAC;CACL;AACD,SAAS,4BAA4B,CAAC,UAAU,EAAE,GAAG,EAAE;IACnD,IAAI,cAAc,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IACzC,IAAI,iBAAiB,GAAG,EAAE,CAAC;IAC3B,IAAI,oBAAoB,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAC/C,IAAI,uBAAuB,GAAG,EAAE,CAAC;IACjC,IAAI,WAAW,GAAG,gBAAgB,CAACH,aAAK,CAAC,GAAG,EAAE;QAC1C,QAAQ,EAAE;YACN,KAAK,EAAE,UAAU,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE;gBACjC,IAAI,MAAM,CAAC,IAAI,KAAK,oBAAoB,EAAE;oBACtC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC;iBAC1C;aACJ;SACJ;QACD,KAAK,EAAE;YACH,KAAK,EAAE,UAAU,IAAI,EAAE;gBACnB,IAAI,UAAU,IAAI,IAAI,CAAC,UAAU,EAAE;oBAC/B,IAAI,iBAAiB,GAAG,UAAU,CAAC,IAAI,CAAC,UAAU,SAAS,EAAE,EAAE,OAAO,SAAS,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;oBAC3F,IAAI,iBAAiB;wBACjB,IAAI,CAAC,UAAU;wBACf,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,CAAC,EAAE;wBACvD,IAAI,IAAI,CAAC,SAAS,EAAE;4BAChB,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,UAAU,GAAG,EAAE;gCAClC,IAAI,GAAG,CAAC,KAAK,CAAC,IAAI,KAAK,UAAU,EAAE;oCAC/B,iBAAiB,CAAC,IAAI,CAAC;wCACnB,IAAI,EAAE,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK;qCAC7B,CAAC,CAAC;iCACN;6BACJ,CAAC,CAAC;yBACN;wBACD,IAAI,IAAI,CAAC,YAAY,EAAE;4BACnB,qCAAqC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,UAAU,IAAI,EAAE;gCAC7E,uBAAuB,CAAC,IAAI,CAAC;oCACzB,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,KAAK;iCACxB,CAAC,CAAC;6BACN,CAAC,CAAC;yBACN;wBACD,OAAO,IAAI,CAAC;qBACf;iBACJ;aACJ;SACJ;QACD,cAAc,EAAE;YACZ,KAAK,EAAE,UAAU,IAAI,EAAE;gBACnB,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC;aAChD;SACJ;QACD,SAAS,EAAE;YACP,KAAK,EAAE,UAAU,IAAI,EAAE;gBACnB,IAAI,mBAAmB,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,EAAE;oBACvC,OAAO,IAAI,CAAC;iBACf;aACJ;SACJ;KACJ,CAAC,CAAC,CAAC;IACJ,IAAI,WAAW;QACX,aAAa,CAAC,iBAAiB,EAAE,UAAU,CAAC,EAAE,EAAE,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,EAAE;QAC3F,WAAW,GAAG,2BAA2B,CAAC,iBAAiB,EAAE,WAAW,CAAC,CAAC;KAC7E;IACD,IAAI,WAAW;QACX,aAAa,CAAC,uBAAuB,EAAE,UAAU,EAAE,EAAE,EAAE,OAAO,CAAC,oBAAoB,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC;aAC3F,MAAM,EAAE;QACb,WAAW,GAAG,gCAAgC,CAAC,uBAAuB,EAAE,WAAW,CAAC,CAAC;KACxF;IACD,OAAO,WAAW,CAAC;CACtB;AACD,SAAS,qBAAqB,CAAC,GAAG,EAAE;IAChC,OAAOA,aAAK,CAAC,aAAa,CAAC,GAAG,CAAC,EAAE;QAC7B,YAAY,EAAE;YACV,KAAK,EAAE,UAAU,IAAI,EAAE,IAAI,EAAE,MAAM,EAAE;gBACjC,IAAI,MAAM;oBACN,MAAM,CAAC,IAAI,KAAK,qBAAqB,EAAE;oBACvC,OAAO;iBACV;gBACD,IAAI,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;gBACjC,IAAI,CAAC,UAAU,EAAE;oBACb,OAAO;iBACV;gBACD,IAAI,IAAI,GAAG,UAAU,CAAC,IAAI,CAAC,UAAU,SAAS,EAAE;oBAC5C,QAAQ,OAAO,CAAC,SAAS,CAAC;yBACrB,SAAS,CAAC,IAAI,CAAC,KAAK,KAAK,YAAY;4BAClC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE;iBAC7D,CAAC,CAAC;gBACH,IAAI,IAAI,EAAE;oBACN,OAAO;iBACV;gBACD,IAAI,KAAK,GAAG,MAAM,CAAC;gBACnB,IAAI,OAAO,CAAC,KAAK,CAAC;oBACd,KAAK,CAAC,UAAU;oBAChB,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC,IAAI,CAAC,KAAK,KAAK,QAAQ,CAAC,EAAE,CAAC,EAAE;oBAC3E,OAAO;iBACV;gBACD,OAAOE,cAAQ,CAACA,cAAQ,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,UAAU,EAAEC,oBAAc,CAAC,UAAU,EAAE,CAAC,cAAc,CAAC,CAAC,EAAE,CAAC,CAAC;aACrG;SACJ;KACJ,CAAC,CAAC;CACN;AACD,IAAI,sBAAsB,GAAG;IACzB,IAAI,EAAE,UAAU,SAAS,EAAE;QACvB,IAAI,UAAU,GAAG,SAAS,CAAC,IAAI,CAAC,KAAK,KAAK,YAAY,CAAC;QACvD,IAAI,UAAU,EAAE;YACZ,IAAI,CAAC,SAAS,CAAC,SAAS;gBACpB,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,GAAG,EAAE,EAAE,OAAO,GAAG,CAAC,IAAI,CAAC,KAAK,KAAK,KAAK,CAAC,EAAE,CAAC,EAAE;gBAChF,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,IAAIJ,qBAAS,CAAC,IAAI,CAAC,wEAAwE;oBAC5H,+DAA+D,CAAC,CAAC;aACxE;SACJ;QACD,OAAO,UAAU,CAAC;KACrB;CACJ,CAAC;AACF,SAAS,qCAAqC,CAAC,GAAG,EAAE;IAChD,OAAO,4BAA4B,CAAC,CAAC,sBAAsB,CAAC,EAAE,aAAa,CAAC,GAAG,CAAC,CAAC,CAAC;CACrF;AACD,SAAS,kBAAkB,CAAC,MAAM,EAAE;IAChC,OAAO,SAAS,eAAe,CAAC,QAAQ,EAAE;QACtC,OAAO,MAAM,CAAC,IAAI,CAAC,UAAU,OAAO,EAAE;YAClC,OAAO,QAAQ,CAAC,KAAK;gBACjB,QAAQ,CAAC,KAAK,CAAC,IAAI,KAAK,UAAU;gBAClC,QAAQ,CAAC,KAAK,CAAC,IAAI;iBAClB,OAAO,CAAC,IAAI,KAAK,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK;qBACtC,OAAO,CAAC,IAAI,IAAI,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;SACrD,CAAC,CAAC;KACN,CAAC;CACL;AACD,SAAS,2BAA2B,CAAC,MAAM,EAAE,GAAG,EAAE;IAC9C,IAAI,UAAU,GAAG,kBAAkB,CAAC,MAAM,CAAC,CAAC;IAC5C,OAAO,gBAAgB,CAACC,aAAK,CAAC,GAAG,EAAE;QAC/B,mBAAmB,EAAE;YACjB,KAAK,EAAE,UAAU,IAAI,EAAE;gBACnB,OAAOE,cAAQ,CAACA,cAAQ,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,mBAAmB,EAAE,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,UAAU,MAAM,EAAE;wBACrG,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,GAAG,EAAE,EAAE,OAAO,GAAG,CAAC,IAAI,KAAK,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;qBAC3F,CAAC,EAAE,CAAC,CAAC;aACb;SACJ;QACD,KAAK,EAAE;YACH,KAAK,EAAE,UAAU,IAAI,EAAE;gBACnB,IAAI,iBAAiB,GAAG,MAAM,CAAC,IAAI,CAAC,UAAU,SAAS,EAAE,EAAE,OAAO,SAAS,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;gBACvF,IAAI,iBAAiB,EAAE;oBACnB,IAAI,eAAe,GAAG,CAAC,CAAC;oBACxB,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,UAAU,GAAG,EAAE;wBAClC,IAAI,UAAU,CAAC,GAAG,CAAC,EAAE;4BACjB,eAAe,IAAI,CAAC,CAAC;yBACxB;qBACJ,CAAC,CAAC;oBACH,IAAI,eAAe,KAAK,CAAC,EAAE;wBACvB,OAAO,IAAI,CAAC;qBACf;iBACJ;aACJ;SACJ;QACD,QAAQ,EAAE;YACN,KAAK,EAAE,UAAU,IAAI,EAAE;gBACnB,IAAI,UAAU,CAAC,IAAI,CAAC,EAAE;oBAClB,OAAO,IAAI,CAAC;iBACf;aACJ;SACJ;KACJ,CAAC,CAAC,CAAC;CACP;AACD,SAAS,gCAAgC,CAAC,MAAM,EAAE,GAAG,EAAE;IACnD,SAAS,KAAK,CAAC,IAAI,EAAE;QACjB,IAAI,MAAM,CAAC,IAAI,CAAC,UAAU,GAAG,EAAE,EAAE,OAAO,GAAG,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE;YACtE,OAAO,IAAI,CAAC;SACf;KACJ;IACD,OAAO,gBAAgB,CAACF,aAAK,CAAC,GAAG,EAAE;QAC/B,cAAc,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE;QAChC,kBAAkB,EAAE,EAAE,KAAK,EAAE,KAAK,EAAE;KACvC,CAAC,CAAC,CAAC;CACP;AACD,SAAS,qCAAqC,CAAC,YAAY,EAAE;IACzD,IAAI,YAAY,GAAG,EAAE,CAAC;IACtB,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC,UAAU,SAAS,EAAE;QACjD,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,gBAAgB,CAAC,SAAS,CAAC;YAClD,SAAS,CAAC,YAAY,EAAE;YACxB,qCAAqC,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,UAAU,IAAI,EAAE,EAAE,OAAO,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC;SAC9H;aACI,IAAI,SAAS,CAAC,IAAI,KAAK,gBAAgB,EAAE;YAC1C,YAAY,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SAChC;KACJ,CAAC,CAAC;IACH,OAAO,YAAY,CAAC;CACvB;AACD,SAAS,0BAA0B,CAAC,QAAQ,EAAE;IAC1C,IAAI,UAAU,GAAG,iBAAiB,CAAC,QAAQ,CAAC,CAAC;IAC7C,IAAI,mBAAmB,GAAG,UAAU,CAAC,SAAS,CAAC;IAC/C,IAAI,mBAAmB,KAAK,OAAO,EAAE;QACjC,OAAO,QAAQ,CAAC;KACnB;IACD,IAAI,WAAW,GAAGA,aAAK,CAAC,QAAQ,EAAE;QAC9B,mBAAmB,EAAE;YACjB,KAAK,EAAE,UAAU,IAAI,EAAE;gBACnB,OAAOE,cAAQ,CAACA,cAAQ,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,SAAS,EAAE,OAAO,EAAE,CAAC,CAAC;aAC/D;SACJ;KACJ,CAAC,CAAC;IACH,OAAO,WAAW,CAAC;CACtB;AACD,SAAS,4BAA4B,CAAC,QAAQ,EAAE;IAC5C,aAAa,CAAC,QAAQ,CAAC,CAAC;IACxB,IAAI,WAAW,GAAG,4BAA4B,CAAC;QAC3C;YACI,IAAI,EAAE,UAAU,SAAS,EAAE,EAAE,OAAO,SAAS,CAAC,IAAI,CAAC,KAAK,KAAK,QAAQ,CAAC,EAAE;YACxE,MAAM,EAAE,IAAI;SACf;KACJ,EAAE,QAAQ,CAAC,CAAC;IACb,IAAI,WAAW,EAAE;QACb,WAAW,GAAGF,aAAK,CAAC,WAAW,EAAE;YAC7B,kBAAkB,EAAE;gBAChB,KAAK,EAAE,UAAU,IAAI,EAAE;oBACnB,IAAI,IAAI,CAAC,YAAY,EAAE;wBACnB,IAAI,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,KAAK,CAAC,UAAU,SAAS,EAAE;4BACzE,OAAO,OAAO,CAAC,SAAS,CAAC,IAAI,SAAS,CAAC,IAAI,CAAC,KAAK,KAAK,YAAY,CAAC;yBACtE,CAAC,CAAC;wBACH,IAAI,cAAc,EAAE;4BAChB,OAAO,IAAI,CAAC;yBACf;qBACJ;iBACJ;aACJ;SACJ,CAAC,CAAC;KACN;IACD,OAAO,WAAW,CAAC;CACtB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}