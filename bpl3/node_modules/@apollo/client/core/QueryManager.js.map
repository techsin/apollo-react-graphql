{"version":3,"file":"QueryManager.js","sources":["QueryManager.js"],"sourcesContent":["import { __assign, __awaiter, __generator } from \"tslib\";\nimport { invariant, InvariantError } from 'ts-invariant';\nimport { execute } from '../link/core/execute';\nimport { getDefaultValues, getOperationDefinition, getOperationName, } from '../utilities/graphql/getFromAST';\nimport { hasDirectives, hasClientExports, } from '../utilities/graphql/directives';\nimport { graphQLResultHasError, tryFunctionOrLogError, } from '../utilities/common/errorHandling';\nimport { removeConnectionDirectiveFromDocument } from '../utilities/graphql/transform';\nimport { canUseWeakMap } from '../utilities/common/canUse';\nimport { isApolloError, ApolloError } from '../errors/ApolloError';\nimport { Observable } from '../utilities/observables/Observable';\nimport { MutationStore } from '../data/mutations';\nimport { QueryStore } from '../data/queries';\nimport { ObservableQuery } from './ObservableQuery';\nimport { NetworkStatus, isNetworkRequestInFlight } from './networkStatus';\nimport { FetchType, } from './types';\nimport { LocalState } from './LocalState';\nimport { asyncMap, multiplex } from '../utilities/observables/observables';\nimport { isNonEmptyArray } from '../utilities/common/arrays';\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar QueryManager = (function () {\n    function QueryManager(_a) {\n        var cache = _a.cache, link = _a.link, _b = _a.queryDeduplication, queryDeduplication = _b === void 0 ? false : _b, _c = _a.onBroadcast, onBroadcast = _c === void 0 ? function () { return undefined; } : _c, _d = _a.ssrMode, ssrMode = _d === void 0 ? false : _d, _e = _a.clientAwareness, clientAwareness = _e === void 0 ? {} : _e, localState = _a.localState, assumeImmutableResults = _a.assumeImmutableResults;\n        this.mutationStore = new MutationStore();\n        this.queryStore = new QueryStore();\n        this.clientAwareness = {};\n        this.idCounter = 1;\n        this.queries = new Map();\n        this.fetchQueryRejectFns = new Map();\n        this.transformCache = new (canUseWeakMap ? WeakMap : Map)();\n        this.inFlightLinkObservables = new Map();\n        this.pollingInfoByQueryId = new Map();\n        this.cache = cache;\n        this.link = link;\n        this.queryDeduplication = queryDeduplication;\n        this.onBroadcast = onBroadcast;\n        this.clientAwareness = clientAwareness;\n        this.localState = localState || new LocalState({ cache: cache });\n        this.ssrMode = ssrMode;\n        this.assumeImmutableResults = !!assumeImmutableResults;\n    }\n    QueryManager.prototype.stop = function () {\n        var _this = this;\n        this.queries.forEach(function (_info, queryId) {\n            _this.stopQueryNoBroadcast(queryId);\n        });\n        this.fetchQueryRejectFns.forEach(function (reject) {\n            reject(new InvariantError('QueryManager stopped while query was in flight'));\n        });\n    };\n    QueryManager.prototype.mutate = function (_a) {\n        var mutation = _a.mutation, variables = _a.variables, optimisticResponse = _a.optimisticResponse, updateQueriesByName = _a.updateQueries, _b = _a.refetchQueries, refetchQueries = _b === void 0 ? [] : _b, _c = _a.awaitRefetchQueries, awaitRefetchQueries = _c === void 0 ? false : _c, updateWithProxyFn = _a.update, _d = _a.errorPolicy, errorPolicy = _d === void 0 ? 'none' : _d, fetchPolicy = _a.fetchPolicy, _e = _a.context, context = _e === void 0 ? {} : _e;\n        return __awaiter(this, void 0, void 0, function () {\n            var mutationId, generateUpdateQueriesInfo, optimistic_1, self;\n            var _this = this;\n            return __generator(this, function (_f) {\n                switch (_f.label) {\n                    case 0:\n                        invariant(mutation, 'mutation option is required. You must specify your GraphQL document in the mutation option.');\n                        invariant(!fetchPolicy || fetchPolicy === 'no-cache', \"Mutations only support a 'no-cache' fetchPolicy. If you don't want to disable the cache, remove your fetchPolicy setting to proceed with the default mutation behavior.\");\n                        mutationId = this.generateQueryId();\n                        mutation = this.transform(mutation).document;\n                        this.setQuery(mutationId, function () { return ({ document: mutation }); });\n                        variables = this.getVariables(mutation, variables);\n                        if (!this.transform(mutation).hasClientExports) return [3, 2];\n                        return [4, this.localState.addExportedVariables(mutation, variables, context)];\n                    case 1:\n                        variables = _f.sent();\n                        _f.label = 2;\n                    case 2:\n                        generateUpdateQueriesInfo = function () {\n                            var ret = {};\n                            if (updateQueriesByName) {\n                                _this.queries.forEach(function (_a, queryId) {\n                                    var observableQuery = _a.observableQuery;\n                                    if (observableQuery) {\n                                        var queryName = observableQuery.queryName;\n                                        if (queryName &&\n                                            hasOwnProperty.call(updateQueriesByName, queryName)) {\n                                            ret[queryId] = {\n                                                updater: updateQueriesByName[queryName],\n                                                query: _this.queryStore.get(queryId),\n                                            };\n                                        }\n                                    }\n                                });\n                            }\n                            return ret;\n                        };\n                        this.mutationStore.initMutation(mutationId, mutation, variables);\n                        if (optimisticResponse) {\n                            optimistic_1 = typeof optimisticResponse === 'function'\n                                ? optimisticResponse(variables)\n                                : optimisticResponse;\n                            this.cache.recordOptimisticTransaction(function (cache) {\n                                markMutationResult({\n                                    mutationId: mutationId,\n                                    result: { data: optimistic_1 },\n                                    document: mutation,\n                                    variables: variables,\n                                    queryUpdatersById: generateUpdateQueriesInfo(),\n                                    update: updateWithProxyFn,\n                                }, cache);\n                            }, mutationId);\n                        }\n                        this.broadcastQueries();\n                        self = this;\n                        return [2, new Promise(function (resolve, reject) {\n                                var storeResult;\n                                var error;\n                                self.getObservableFromLink(mutation, __assign(__assign({}, context), { optimisticResponse: optimisticResponse }), variables, false).subscribe({\n                                    next: function (result) {\n                                        if (graphQLResultHasError(result) && errorPolicy === 'none') {\n                                            error = new ApolloError({\n                                                graphQLErrors: result.errors,\n                                            });\n                                            return;\n                                        }\n                                        self.mutationStore.markMutationResult(mutationId);\n                                        if (fetchPolicy !== 'no-cache') {\n                                            markMutationResult({\n                                                mutationId: mutationId,\n                                                result: result,\n                                                document: mutation,\n                                                variables: variables,\n                                                queryUpdatersById: generateUpdateQueriesInfo(),\n                                                update: updateWithProxyFn,\n                                            }, self.cache);\n                                        }\n                                        storeResult = result;\n                                    },\n                                    error: function (err) {\n                                        self.mutationStore.markMutationError(mutationId, err);\n                                        if (optimisticResponse) {\n                                            self.cache.removeOptimistic(mutationId);\n                                        }\n                                        self.broadcastQueries();\n                                        self.setQuery(mutationId, function () { return ({ document: null }); });\n                                        reject(new ApolloError({\n                                            networkError: err,\n                                        }));\n                                    },\n                                    complete: function () {\n                                        if (error) {\n                                            self.mutationStore.markMutationError(mutationId, error);\n                                        }\n                                        if (optimisticResponse) {\n                                            self.cache.removeOptimistic(mutationId);\n                                        }\n                                        self.broadcastQueries();\n                                        if (error) {\n                                            reject(error);\n                                            return;\n                                        }\n                                        if (typeof refetchQueries === 'function') {\n                                            refetchQueries = refetchQueries(storeResult);\n                                        }\n                                        var refetchQueryPromises = [];\n                                        if (isNonEmptyArray(refetchQueries)) {\n                                            refetchQueries.forEach(function (refetchQuery) {\n                                                if (typeof refetchQuery === 'string') {\n                                                    self.queries.forEach(function (_a) {\n                                                        var observableQuery = _a.observableQuery;\n                                                        if (observableQuery &&\n                                                            observableQuery.queryName === refetchQuery) {\n                                                            refetchQueryPromises.push(observableQuery.refetch());\n                                                        }\n                                                    });\n                                                }\n                                                else {\n                                                    var queryOptions = {\n                                                        query: refetchQuery.query,\n                                                        variables: refetchQuery.variables,\n                                                        fetchPolicy: 'network-only',\n                                                    };\n                                                    if (refetchQuery.context) {\n                                                        queryOptions.context = refetchQuery.context;\n                                                    }\n                                                    refetchQueryPromises.push(self.query(queryOptions));\n                                                }\n                                            });\n                                        }\n                                        Promise.all(awaitRefetchQueries ? refetchQueryPromises : []).then(function () {\n                                            self.setQuery(mutationId, function () { return ({ document: null }); });\n                                            if (errorPolicy === 'ignore' &&\n                                                storeResult &&\n                                                graphQLResultHasError(storeResult)) {\n                                                delete storeResult.errors;\n                                            }\n                                            resolve(storeResult);\n                                        });\n                                    },\n                                });\n                            })];\n                }\n            });\n        });\n    };\n    QueryManager.prototype.fetchQuery = function (queryId, options, fetchType, fetchMoreForQueryId) {\n        return __awaiter(this, void 0, void 0, function () {\n            var _a, metadata, _b, fetchPolicy, _c, context, query, variables, storeResult, isNetworkOnly, needToFetch, _d, complete, result, shouldFetch, requestId, cancel, networkResult;\n            var _this = this;\n            return __generator(this, function (_e) {\n                switch (_e.label) {\n                    case 0:\n                        _a = options.metadata, metadata = _a === void 0 ? null : _a, _b = options.fetchPolicy, fetchPolicy = _b === void 0 ? 'cache-first' : _b, _c = options.context, context = _c === void 0 ? {} : _c;\n                        query = this.transform(options.query).document;\n                        variables = this.getVariables(query, options.variables);\n                        if (!this.transform(query).hasClientExports) return [3, 2];\n                        return [4, this.localState.addExportedVariables(query, variables, context)];\n                    case 1:\n                        variables = _e.sent();\n                        _e.label = 2;\n                    case 2:\n                        options = __assign(__assign({}, options), { variables: variables });\n                        isNetworkOnly = fetchPolicy === 'network-only' || fetchPolicy === 'no-cache';\n                        needToFetch = isNetworkOnly;\n                        if (!isNetworkOnly) {\n                            _d = this.cache.diff({\n                                query: query,\n                                variables: variables,\n                                returnPartialData: true,\n                                optimistic: false,\n                            }), complete = _d.complete, result = _d.result;\n                            needToFetch = !complete || fetchPolicy === 'cache-and-network';\n                            storeResult = result;\n                        }\n                        shouldFetch = needToFetch && fetchPolicy !== 'cache-only' && fetchPolicy !== 'standby';\n                        if (hasDirectives(['live'], query))\n                            shouldFetch = true;\n                        requestId = this.idCounter++;\n                        cancel = fetchPolicy !== 'no-cache'\n                            ? this.updateQueryWatch(queryId, query, options)\n                            : undefined;\n                        this.setQuery(queryId, function () { return ({\n                            document: query,\n                            lastRequestId: requestId,\n                            invalidated: true,\n                            cancel: cancel,\n                        }); });\n                        this.invalidate(fetchMoreForQueryId);\n                        this.queryStore.initQuery({\n                            queryId: queryId,\n                            document: query,\n                            storePreviousVariables: shouldFetch,\n                            variables: variables,\n                            isPoll: fetchType === FetchType.poll,\n                            isRefetch: fetchType === FetchType.refetch,\n                            metadata: metadata,\n                            fetchMoreForQueryId: fetchMoreForQueryId,\n                        });\n                        if (shouldFetch) {\n                            this.broadcastQueries();\n                            networkResult = this.fetchRequest({\n                                requestId: requestId,\n                                queryId: queryId,\n                                document: query,\n                                options: options,\n                                fetchMoreForQueryId: fetchMoreForQueryId,\n                            }).catch(function (error) {\n                                if (isApolloError(error)) {\n                                    throw error;\n                                }\n                                else {\n                                    if (requestId >= _this.getQuery(queryId).lastRequestId) {\n                                        _this.queryStore.markQueryError(queryId, error, fetchMoreForQueryId);\n                                        _this.invalidate(queryId);\n                                        _this.invalidate(fetchMoreForQueryId);\n                                        _this.broadcastQueries();\n                                    }\n                                    throw new ApolloError({ networkError: error });\n                                }\n                            });\n                            if (fetchPolicy !== 'cache-and-network') {\n                                return [2, networkResult];\n                            }\n                            networkResult.catch(function () { });\n                        }\n                        this.queryStore.markQueryResultClient(queryId, !shouldFetch);\n                        this.invalidate(queryId);\n                        this.invalidate(fetchMoreForQueryId);\n                        if (this.transform(query).hasForcedResolvers) {\n                            return [2, this.localState.runResolvers({\n                                    document: query,\n                                    remoteResult: { data: storeResult },\n                                    context: context,\n                                    variables: variables,\n                                    onlyRunForcedResolvers: true,\n                                }).then(function (result) {\n                                    _this.markQueryResult(queryId, result, options, fetchMoreForQueryId);\n                                    _this.broadcastQueries();\n                                    return result;\n                                })];\n                        }\n                        this.broadcastQueries();\n                        return [2, { data: storeResult }];\n                }\n            });\n        });\n    };\n    QueryManager.prototype.markQueryResult = function (queryId, result, _a, fetchMoreForQueryId) {\n        var fetchPolicy = _a.fetchPolicy, variables = _a.variables, errorPolicy = _a.errorPolicy;\n        if (fetchPolicy === 'no-cache') {\n            this.setQuery(queryId, function () { return ({\n                newData: { result: result.data, complete: true },\n            }); });\n        }\n        else {\n            var document_1 = this.getQuery(queryId).document;\n            var ignoreErrors = errorPolicy === 'ignore' || errorPolicy === 'all';\n            var writeWithErrors = !graphQLResultHasError(result);\n            if (ignoreErrors && graphQLResultHasError(result) && result.data) {\n                writeWithErrors = true;\n            }\n            if (!fetchMoreForQueryId && writeWithErrors) {\n                this.cache.write({\n                    result: result.data,\n                    dataId: 'ROOT_QUERY',\n                    query: document_1,\n                    variables: variables,\n                });\n            }\n        }\n    };\n    QueryManager.prototype.queryListenerForObserver = function (queryId, options, observer) {\n        var _this = this;\n        function invoke(method, argument) {\n            if (observer[method]) {\n                try {\n                    observer[method](argument);\n                }\n                catch (e) {\n                    invariant.error(e);\n                }\n            }\n            else if (method === 'error') {\n                invariant.error(argument);\n            }\n        }\n        return function (queryStoreValue, newData) {\n            _this.invalidate(queryId, false);\n            if (!queryStoreValue)\n                return;\n            var _a = _this.getQuery(queryId), observableQuery = _a.observableQuery, document = _a.document;\n            var fetchPolicy = observableQuery\n                ? observableQuery.options.fetchPolicy\n                : options.fetchPolicy;\n            if (fetchPolicy === 'standby')\n                return;\n            var loading = isNetworkRequestInFlight(queryStoreValue.networkStatus);\n            var lastResult = observableQuery && observableQuery.getLastResult();\n            var networkStatusChanged = !!(lastResult &&\n                lastResult.networkStatus !== queryStoreValue.networkStatus);\n            var shouldNotifyIfLoading = options.returnPartialData ||\n                (!newData && queryStoreValue.previousVariables) ||\n                (networkStatusChanged && options.notifyOnNetworkStatusChange) ||\n                fetchPolicy === 'cache-only' ||\n                fetchPolicy === 'cache-and-network';\n            if (loading && !shouldNotifyIfLoading) {\n                return;\n            }\n            var hasGraphQLErrors = isNonEmptyArray(queryStoreValue.graphQLErrors);\n            var errorPolicy = observableQuery\n                && observableQuery.options.errorPolicy\n                || options.errorPolicy\n                || 'none';\n            if (errorPolicy === 'none' && hasGraphQLErrors || queryStoreValue.networkError) {\n                return invoke('error', new ApolloError({\n                    graphQLErrors: queryStoreValue.graphQLErrors,\n                    networkError: queryStoreValue.networkError,\n                }));\n            }\n            try {\n                var data = void 0;\n                var isMissing = void 0;\n                if (newData) {\n                    if (fetchPolicy !== 'no-cache' && fetchPolicy !== 'network-only') {\n                        _this.setQuery(queryId, function () { return ({ newData: null }); });\n                    }\n                    data = newData.result;\n                    isMissing = !newData.complete;\n                }\n                else {\n                    var lastError = observableQuery && observableQuery.getLastError();\n                    var errorStatusChanged = errorPolicy !== 'none' &&\n                        (lastError && lastError.graphQLErrors) !==\n                            queryStoreValue.graphQLErrors;\n                    if (lastResult && lastResult.data && !errorStatusChanged) {\n                        data = lastResult.data;\n                        isMissing = false;\n                    }\n                    else {\n                        var diffResult = _this.cache.diff({\n                            query: document,\n                            variables: queryStoreValue.previousVariables ||\n                                queryStoreValue.variables,\n                            returnPartialData: true,\n                            optimistic: true,\n                        });\n                        data = diffResult.result;\n                        isMissing = !diffResult.complete;\n                    }\n                }\n                var stale = isMissing && !(options.returnPartialData ||\n                    options.partialRefetch ||\n                    fetchPolicy === 'cache-only');\n                var resultFromStore = {\n                    data: stale ? lastResult && lastResult.data : data,\n                    loading: loading,\n                    networkStatus: queryStoreValue.networkStatus,\n                    stale: stale,\n                };\n                if (errorPolicy === 'all' && hasGraphQLErrors) {\n                    resultFromStore.errors = queryStoreValue.graphQLErrors;\n                }\n                invoke('next', resultFromStore);\n            }\n            catch (networkError) {\n                invoke('error', new ApolloError({ networkError: networkError }));\n            }\n        };\n    };\n    QueryManager.prototype.transform = function (document) {\n        var transformCache = this.transformCache;\n        if (!transformCache.has(document)) {\n            var transformed = this.cache.transformDocument(document);\n            var forLink = removeConnectionDirectiveFromDocument(this.cache.transformForLink(transformed));\n            var clientQuery = this.localState.clientQuery(transformed);\n            var serverQuery = this.localState.serverQuery(forLink);\n            var cacheEntry_1 = {\n                document: transformed,\n                hasClientExports: hasClientExports(transformed),\n                hasForcedResolvers: this.localState.shouldForceResolvers(transformed),\n                clientQuery: clientQuery,\n                serverQuery: serverQuery,\n                defaultVars: getDefaultValues(getOperationDefinition(transformed)),\n            };\n            var add = function (doc) {\n                if (doc && !transformCache.has(doc)) {\n                    transformCache.set(doc, cacheEntry_1);\n                }\n            };\n            add(document);\n            add(transformed);\n            add(clientQuery);\n            add(serverQuery);\n        }\n        return transformCache.get(document);\n    };\n    QueryManager.prototype.getVariables = function (document, variables) {\n        return __assign(__assign({}, this.transform(document).defaultVars), variables);\n    };\n    QueryManager.prototype.watchQuery = function (options, shouldSubscribe) {\n        if (shouldSubscribe === void 0) { shouldSubscribe = true; }\n        invariant(options.fetchPolicy !== 'standby', 'client.watchQuery cannot be called with fetchPolicy set to \"standby\"');\n        options.variables = this.getVariables(options.query, options.variables);\n        if (typeof options.notifyOnNetworkStatusChange === 'undefined') {\n            options.notifyOnNetworkStatusChange = false;\n        }\n        var transformedOptions = __assign({}, options);\n        var observable = new ObservableQuery({\n            queryManager: this,\n            options: transformedOptions,\n            shouldSubscribe: shouldSubscribe,\n        });\n        this.queryStore.initQuery({\n            queryId: observable.queryId,\n            document: this.transform(options.query).document,\n            variables: options.variables,\n            storePreviousVariables: false,\n            isPoll: false,\n            isRefetch: false,\n            metadata: options.metadata,\n            fetchMoreForQueryId: void 0,\n        });\n        return observable;\n    };\n    QueryManager.prototype.query = function (options) {\n        var _this = this;\n        invariant(options.query, 'query option is required. You must specify your GraphQL document ' +\n            'in the query option.');\n        invariant(options.query.kind === 'Document', 'You must wrap the query string in a \"gql\" tag.');\n        invariant(!options.returnPartialData, 'returnPartialData option only supported on watchQuery.');\n        invariant(!options.pollInterval, 'pollInterval option only supported on watchQuery.');\n        return new Promise(function (resolve, reject) {\n            var watchedQuery = _this.watchQuery(options, false);\n            _this.fetchQueryRejectFns.set(\"query:\" + watchedQuery.queryId, reject);\n            watchedQuery\n                .result()\n                .then(resolve, reject)\n                .then(function () {\n                return _this.fetchQueryRejectFns.delete(\"query:\" + watchedQuery.queryId);\n            });\n        });\n    };\n    QueryManager.prototype.generateQueryId = function () {\n        return String(this.idCounter++);\n    };\n    QueryManager.prototype.stopQueryInStore = function (queryId) {\n        this.stopQueryInStoreNoBroadcast(queryId);\n        this.broadcastQueries();\n    };\n    QueryManager.prototype.stopQueryInStoreNoBroadcast = function (queryId) {\n        this.stopPollingQuery(queryId);\n        this.queryStore.stopQuery(queryId);\n        this.invalidate(queryId);\n    };\n    QueryManager.prototype.addQueryListener = function (queryId, listener) {\n        this.setQuery(queryId, function (_a) {\n            var listeners = _a.listeners;\n            listeners.add(listener);\n            return { invalidated: false };\n        });\n    };\n    QueryManager.prototype.updateQueryWatch = function (queryId, document, options) {\n        var _this = this;\n        var cancel = this.getQuery(queryId).cancel;\n        if (cancel)\n            cancel();\n        var previousResult = function () {\n            var previousResult = null;\n            var observableQuery = _this.getQuery(queryId).observableQuery;\n            if (observableQuery) {\n                var lastResult = observableQuery.getLastResult();\n                if (lastResult) {\n                    previousResult = lastResult.data;\n                }\n            }\n            return previousResult;\n        };\n        return this.cache.watch({\n            query: document,\n            variables: options.variables,\n            optimistic: true,\n            previousResult: previousResult,\n            callback: function (newData) {\n                _this.setQuery(queryId, function () { return ({ invalidated: true, newData: newData }); });\n            },\n        });\n    };\n    QueryManager.prototype.addObservableQuery = function (queryId, observableQuery) {\n        this.setQuery(queryId, function () { return ({ observableQuery: observableQuery }); });\n    };\n    QueryManager.prototype.removeObservableQuery = function (queryId) {\n        var cancel = this.getQuery(queryId).cancel;\n        this.setQuery(queryId, function () { return ({ observableQuery: null }); });\n        if (cancel)\n            cancel();\n    };\n    QueryManager.prototype.clearStore = function () {\n        this.fetchQueryRejectFns.forEach(function (reject) {\n            reject(new InvariantError('Store reset while query was in flight (not completed in link chain)'));\n        });\n        var resetIds = [];\n        this.queries.forEach(function (_a, queryId) {\n            var observableQuery = _a.observableQuery;\n            if (observableQuery)\n                resetIds.push(queryId);\n        });\n        this.queryStore.reset(resetIds);\n        this.mutationStore.reset();\n        return this.cache.reset();\n    };\n    QueryManager.prototype.resetStore = function () {\n        var _this = this;\n        return this.clearStore().then(function () {\n            return _this.reFetchObservableQueries();\n        });\n    };\n    QueryManager.prototype.reFetchObservableQueries = function (includeStandby) {\n        var _this = this;\n        if (includeStandby === void 0) { includeStandby = false; }\n        var observableQueryPromises = [];\n        this.queries.forEach(function (_a, queryId) {\n            var observableQuery = _a.observableQuery;\n            if (observableQuery) {\n                var fetchPolicy = observableQuery.options.fetchPolicy;\n                observableQuery.resetLastResults();\n                if (fetchPolicy !== 'cache-only' &&\n                    (includeStandby || fetchPolicy !== 'standby')) {\n                    observableQueryPromises.push(observableQuery.refetch());\n                }\n                _this.setQuery(queryId, function () { return ({ newData: null }); });\n                _this.invalidate(queryId);\n            }\n        });\n        this.broadcastQueries();\n        return Promise.all(observableQueryPromises);\n    };\n    QueryManager.prototype.observeQuery = function (queryId, options, observer) {\n        this.addQueryListener(queryId, this.queryListenerForObserver(queryId, options, observer));\n        return this.fetchQuery(queryId, options);\n    };\n    QueryManager.prototype.startGraphQLSubscription = function (_a) {\n        var _this = this;\n        var query = _a.query, fetchPolicy = _a.fetchPolicy, variables = _a.variables;\n        query = this.transform(query).document;\n        variables = this.getVariables(query, variables);\n        var makeObservable = function (variables) {\n            return _this.getObservableFromLink(query, {}, variables, false).map(function (result) {\n                if (!fetchPolicy || fetchPolicy !== 'no-cache') {\n                    if (!graphQLResultHasError(result)) {\n                        _this.cache.write({\n                            query: query,\n                            result: result.data,\n                            dataId: 'ROOT_SUBSCRIPTION',\n                            variables: variables,\n                        });\n                    }\n                    _this.broadcastQueries();\n                }\n                if (graphQLResultHasError(result)) {\n                    throw new ApolloError({\n                        graphQLErrors: result.errors,\n                    });\n                }\n                return result;\n            });\n        };\n        if (this.transform(query).hasClientExports) {\n            var observablePromise_1 = this.localState.addExportedVariables(query, variables).then(makeObservable);\n            return new Observable(function (observer) {\n                var sub = null;\n                observablePromise_1.then(function (observable) { return sub = observable.subscribe(observer); }, observer.error);\n                return function () { return sub && sub.unsubscribe(); };\n            });\n        }\n        return makeObservable(variables);\n    };\n    QueryManager.prototype.stopQuery = function (queryId) {\n        this.stopQueryNoBroadcast(queryId);\n        this.broadcastQueries();\n    };\n    QueryManager.prototype.stopQueryNoBroadcast = function (queryId) {\n        this.stopQueryInStoreNoBroadcast(queryId);\n        this.removeQuery(queryId);\n    };\n    QueryManager.prototype.removeQuery = function (queryId) {\n        this.fetchQueryRejectFns.delete(\"query:\" + queryId);\n        this.fetchQueryRejectFns.delete(\"fetchRequest:\" + queryId);\n        this.getQuery(queryId).subscriptions.forEach(function (x) { return x.unsubscribe(); });\n        this.queries.delete(queryId);\n    };\n    QueryManager.prototype.getCurrentQueryResult = function (observableQuery, optimistic) {\n        if (optimistic === void 0) { optimistic = true; }\n        var _a = observableQuery.options, variables = _a.variables, query = _a.query, fetchPolicy = _a.fetchPolicy, returnPartialData = _a.returnPartialData;\n        var lastResult = observableQuery.getLastResult();\n        var newData = this.getQuery(observableQuery.queryId).newData;\n        if (newData && newData.complete) {\n            return { data: newData.result, partial: false };\n        }\n        if (fetchPolicy === 'no-cache' || fetchPolicy === 'network-only') {\n            return { data: undefined, partial: false };\n        }\n        var _b = this.cache.diff({\n            query: query,\n            variables: variables,\n            previousResult: lastResult ? lastResult.data : undefined,\n            returnPartialData: true,\n            optimistic: optimistic,\n        }), result = _b.result, complete = _b.complete;\n        return {\n            data: (complete || returnPartialData) ? result : void 0,\n            partial: !complete,\n        };\n    };\n    QueryManager.prototype.getQueryWithPreviousResult = function (queryIdOrObservable) {\n        var observableQuery;\n        if (typeof queryIdOrObservable === 'string') {\n            var foundObservableQuery = this.getQuery(queryIdOrObservable).observableQuery;\n            invariant(foundObservableQuery, \"ObservableQuery with this id doesn't exist: \" + queryIdOrObservable);\n            observableQuery = foundObservableQuery;\n        }\n        else {\n            observableQuery = queryIdOrObservable;\n        }\n        var _a = observableQuery.options, variables = _a.variables, query = _a.query;\n        return {\n            previousResult: this.getCurrentQueryResult(observableQuery, false).data,\n            variables: variables,\n            document: query,\n        };\n    };\n    QueryManager.prototype.broadcastQueries = function () {\n        var _this = this;\n        this.onBroadcast();\n        this.queries.forEach(function (info, id) {\n            if (info.invalidated) {\n                info.listeners.forEach(function (listener) {\n                    if (listener) {\n                        listener(_this.queryStore.get(id), info.newData);\n                    }\n                });\n            }\n        });\n    };\n    QueryManager.prototype.getLocalState = function () {\n        return this.localState;\n    };\n    QueryManager.prototype.getObservableFromLink = function (query, context, variables, deduplication) {\n        var _this = this;\n        if (deduplication === void 0) { deduplication = this.queryDeduplication; }\n        var observable;\n        var serverQuery = this.transform(query).serverQuery;\n        if (serverQuery) {\n            var _a = this, inFlightLinkObservables_1 = _a.inFlightLinkObservables, link = _a.link;\n            var operation = {\n                query: serverQuery,\n                variables: variables,\n                operationName: getOperationName(serverQuery) || void 0,\n                context: this.prepareContext(__assign(__assign({}, context), { forceFetch: !deduplication })),\n            };\n            context = operation.context;\n            if (deduplication) {\n                var byVariables_1 = inFlightLinkObservables_1.get(serverQuery) || new Map();\n                inFlightLinkObservables_1.set(serverQuery, byVariables_1);\n                var varJson_1 = JSON.stringify(variables);\n                observable = byVariables_1.get(varJson_1);\n                if (!observable) {\n                    byVariables_1.set(varJson_1, observable = multiplex(execute(link, operation)));\n                    var cleanup = function () {\n                        byVariables_1.delete(varJson_1);\n                        if (!byVariables_1.size)\n                            inFlightLinkObservables_1.delete(serverQuery);\n                        cleanupSub_1.unsubscribe();\n                    };\n                    var cleanupSub_1 = observable.subscribe({\n                        next: cleanup,\n                        error: cleanup,\n                        complete: cleanup,\n                    });\n                }\n            }\n            else {\n                observable = multiplex(execute(link, operation));\n            }\n        }\n        else {\n            observable = Observable.of({ data: {} });\n            context = this.prepareContext(context);\n        }\n        var clientQuery = this.transform(query).clientQuery;\n        if (clientQuery) {\n            observable = asyncMap(observable, function (result) {\n                return _this.localState.runResolvers({\n                    document: clientQuery,\n                    remoteResult: result,\n                    context: context,\n                    variables: variables,\n                });\n            });\n        }\n        return observable;\n    };\n    QueryManager.prototype.fetchRequest = function (_a) {\n        var _this = this;\n        var requestId = _a.requestId, queryId = _a.queryId, document = _a.document, options = _a.options, fetchMoreForQueryId = _a.fetchMoreForQueryId;\n        var variables = options.variables, _b = options.errorPolicy, errorPolicy = _b === void 0 ? 'none' : _b, fetchPolicy = options.fetchPolicy;\n        var resultFromStore;\n        var errorsFromStore;\n        return new Promise(function (resolve, reject) {\n            var observable = _this.getObservableFromLink(document, options.context, variables);\n            var fqrfId = \"fetchRequest:\" + queryId;\n            _this.fetchQueryRejectFns.set(fqrfId, reject);\n            var cleanup = function () {\n                _this.fetchQueryRejectFns.delete(fqrfId);\n                _this.setQuery(queryId, function (_a) {\n                    var subscriptions = _a.subscriptions;\n                    subscriptions.delete(subscription);\n                });\n            };\n            var subscription = observable.map(function (result) {\n                if (requestId >= _this.getQuery(queryId).lastRequestId) {\n                    _this.markQueryResult(queryId, result, options, fetchMoreForQueryId);\n                    _this.queryStore.markQueryResult(queryId, result, fetchMoreForQueryId);\n                    _this.invalidate(queryId);\n                    _this.invalidate(fetchMoreForQueryId);\n                    _this.broadcastQueries();\n                }\n                if (errorPolicy === 'none' && isNonEmptyArray(result.errors)) {\n                    return reject(new ApolloError({\n                        graphQLErrors: result.errors,\n                    }));\n                }\n                if (errorPolicy === 'all') {\n                    errorsFromStore = result.errors;\n                }\n                if (fetchMoreForQueryId || fetchPolicy === 'no-cache') {\n                    resultFromStore = result.data;\n                }\n                else {\n                    var _a = _this.cache.diff({\n                        variables: variables,\n                        query: document,\n                        optimistic: false,\n                        returnPartialData: true,\n                    }), result_1 = _a.result, complete = _a.complete;\n                    if (complete || options.returnPartialData) {\n                        resultFromStore = result_1;\n                    }\n                }\n            }).subscribe({\n                error: function (error) {\n                    cleanup();\n                    reject(error);\n                },\n                complete: function () {\n                    cleanup();\n                    resolve({\n                        data: resultFromStore,\n                        errors: errorsFromStore,\n                        loading: false,\n                        networkStatus: NetworkStatus.ready,\n                        stale: false,\n                    });\n                },\n            });\n            _this.setQuery(queryId, function (_a) {\n                var subscriptions = _a.subscriptions;\n                subscriptions.add(subscription);\n            });\n        });\n    };\n    QueryManager.prototype.getQuery = function (queryId) {\n        return (this.queries.get(queryId) || {\n            listeners: new Set(),\n            invalidated: false,\n            document: null,\n            newData: null,\n            lastRequestId: 1,\n            observableQuery: null,\n            subscriptions: new Set(),\n        });\n    };\n    QueryManager.prototype.setQuery = function (queryId, updater) {\n        var prev = this.getQuery(queryId);\n        var newInfo = __assign(__assign({}, prev), updater(prev));\n        this.queries.set(queryId, newInfo);\n    };\n    QueryManager.prototype.invalidate = function (queryId, invalidated) {\n        if (invalidated === void 0) { invalidated = true; }\n        if (queryId) {\n            this.setQuery(queryId, function () { return ({ invalidated: invalidated }); });\n        }\n    };\n    QueryManager.prototype.prepareContext = function (context) {\n        if (context === void 0) { context = {}; }\n        var newContext = this.localState.prepareContext(context);\n        return __assign(__assign({}, newContext), { clientAwareness: this.clientAwareness });\n    };\n    QueryManager.prototype.checkInFlight = function (queryId) {\n        var query = this.queryStore.get(queryId);\n        return (query &&\n            query.networkStatus !== NetworkStatus.ready &&\n            query.networkStatus !== NetworkStatus.error);\n    };\n    QueryManager.prototype.startPollingQuery = function (options, queryId, listener) {\n        var _this = this;\n        var pollInterval = options.pollInterval;\n        invariant(pollInterval, 'Attempted to start a polling query without a polling interval.');\n        if (!this.ssrMode) {\n            var info = this.pollingInfoByQueryId.get(queryId);\n            if (!info) {\n                this.pollingInfoByQueryId.set(queryId, (info = {}));\n            }\n            info.interval = pollInterval;\n            info.options = __assign(__assign({}, options), { fetchPolicy: 'network-only' });\n            var maybeFetch_1 = function () {\n                var info = _this.pollingInfoByQueryId.get(queryId);\n                if (info) {\n                    if (_this.checkInFlight(queryId)) {\n                        poll_1();\n                    }\n                    else {\n                        _this.fetchQuery(queryId, info.options, FetchType.poll).then(poll_1, poll_1);\n                    }\n                }\n            };\n            var poll_1 = function () {\n                var info = _this.pollingInfoByQueryId.get(queryId);\n                if (info) {\n                    clearTimeout(info.timeout);\n                    info.timeout = setTimeout(maybeFetch_1, info.interval);\n                }\n            };\n            if (listener) {\n                this.addQueryListener(queryId, listener);\n            }\n            poll_1();\n        }\n        return queryId;\n    };\n    QueryManager.prototype.stopPollingQuery = function (queryId) {\n        this.pollingInfoByQueryId.delete(queryId);\n    };\n    return QueryManager;\n}());\nexport { QueryManager };\nfunction markMutationResult(mutation, cache) {\n    if (!graphQLResultHasError(mutation.result)) {\n        var cacheWrites_1 = [{\n                result: mutation.result.data,\n                dataId: 'ROOT_MUTATION',\n                query: mutation.document,\n                variables: mutation.variables,\n            }];\n        var queryUpdatersById_1 = mutation.queryUpdatersById;\n        if (queryUpdatersById_1) {\n            Object.keys(queryUpdatersById_1).forEach(function (id) {\n                var _a = queryUpdatersById_1[id], query = _a.query, updater = _a.updater;\n                var _b = cache.diff({\n                    query: query.document,\n                    variables: query.variables,\n                    returnPartialData: true,\n                    optimistic: false,\n                }), currentQueryResult = _b.result, complete = _b.complete;\n                if (complete) {\n                    var nextQueryResult = tryFunctionOrLogError(function () { return updater(currentQueryResult, {\n                        mutationResult: mutation.result,\n                        queryName: getOperationName(query.document) || undefined,\n                        queryVariables: query.variables,\n                    }); });\n                    if (nextQueryResult) {\n                        cacheWrites_1.push({\n                            result: nextQueryResult,\n                            dataId: 'ROOT_QUERY',\n                            query: query.document,\n                            variables: query.variables,\n                        });\n                    }\n                }\n            });\n        }\n        cache.performTransaction(function (c) {\n            cacheWrites_1.forEach(function (write) { return c.write(write); });\n            var update = mutation.update;\n            if (update) {\n                tryFunctionOrLogError(function () { return update(c, mutation.result); });\n            }\n        });\n    }\n}\n//# sourceMappingURL=QueryManager.js.map"],"names":[],"mappings":"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"}