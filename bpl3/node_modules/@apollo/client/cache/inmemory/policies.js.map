{"version":3,"file":"policies.js","sources":["policies.js"],"sourcesContent":["import { __assign } from \"tslib\";\nimport { dep, KeyTrie } from 'optimism';\nimport invariant from 'ts-invariant';\nimport { getFragmentFromSelection, } from '../../utilities/graphql/fragments';\nimport { isField, getTypenameFromResult, valueToObjectRepresentation, storeKeyNameFromField, argumentsObjectFromField, makeReference, isReference, } from '../../utilities/graphql/storeUtils';\nimport { maybeDeepFreeze } from '../../utilities/common/maybeDeepFreeze';\nimport { canUseWeakMap } from '../../utilities/common/canUse';\nimport { fieldNameFromStoreName, isFieldValueToBeMerged, } from './helpers';\nvar hasOwn = Object.prototype.hasOwnProperty;\nexport function defaultDataIdFromObject(object) {\n    var __typename = object.__typename, id = object.id, _id = object._id;\n    if (typeof __typename === \"string\") {\n        if (typeof id !== \"undefined\")\n            return __typename + \":\" + id;\n        if (typeof _id !== \"undefined\")\n            return __typename + \":\" + _id;\n    }\n    return null;\n}\nvar nullKeyFieldsFn = function () { return null; };\nvar simpleKeyArgsFn = function (field) { return field.name.value; };\nvar Policies = (function () {\n    function Policies(config) {\n        var _this = this;\n        if (config === void 0) { config = {}; }\n        this.config = config;\n        this.typePolicies = Object.create(null);\n        this.rootTypenamesById = {\n            __proto__: null,\n            ROOT_QUERY: \"Query\",\n            ROOT_MUTATION: \"Mutation\",\n            ROOT_SUBSCRIPTION: \"Subscription\",\n        };\n        this.usingPossibleTypes = false;\n        this.toReference = function (object, selectionSet, fragmentMap) {\n            var id = _this.identify(object, selectionSet, fragmentMap);\n            return id && makeReference(id);\n        };\n        this.storageTrie = new KeyTrie(true);\n        this.fieldDep = dep();\n        this.config = __assign({ dataIdFromObject: defaultDataIdFromObject }, config);\n        if (config.possibleTypes) {\n            this.addPossibleTypes(config.possibleTypes);\n        }\n        if (config.typePolicies) {\n            this.addTypePolicies(config.typePolicies);\n        }\n    }\n    Policies.prototype.identify = function (object, selectionSet, fragmentMap) {\n        var typename = selectionSet && fragmentMap\n            ? getTypenameFromResult(object, selectionSet, fragmentMap)\n            : object.__typename;\n        var context = {\n            typename: typename,\n            selectionSet: selectionSet,\n            fragmentMap: fragmentMap,\n            policies: this,\n        };\n        var id;\n        var policy = this.getTypePolicy(typename, false);\n        var keyFn = policy && policy.keyFn;\n        if (keyFn) {\n            id = keyFn(object, context);\n        }\n        else {\n            id = this.config.dataIdFromObject\n                ? this.config.dataIdFromObject(object, context)\n                : null;\n        }\n        return id && String(id);\n    };\n    Policies.prototype.addTypePolicies = function (typePolicies) {\n        var _this = this;\n        Object.keys(typePolicies).forEach(function (typename) {\n            var existing = _this.getTypePolicy(typename, true);\n            var incoming = typePolicies[typename];\n            var keyFields = incoming.keyFields, fields = incoming.fields;\n            if (incoming.queryType)\n                _this.setRootTypename(\"Query\", typename);\n            if (incoming.mutationType)\n                _this.setRootTypename(\"Mutation\", typename);\n            if (incoming.subscriptionType)\n                _this.setRootTypename(\"Subscription\", typename);\n            existing.keyFn =\n                keyFields === false ? nullKeyFieldsFn :\n                    Array.isArray(keyFields) ? keyFieldsFnFromSpecifier(keyFields) :\n                        typeof keyFields === \"function\" ? keyFields : void 0;\n            if (fields) {\n                Object.keys(fields).forEach(function (fieldName) {\n                    var existing = _this.getFieldPolicy(typename, fieldName, true);\n                    var incoming = fields[fieldName];\n                    if (typeof incoming === \"function\") {\n                        existing.read = incoming;\n                    }\n                    else {\n                        var keyArgs = incoming.keyArgs, read = incoming.read, merge = incoming.merge;\n                        existing.keyFn =\n                            keyArgs === false ? simpleKeyArgsFn :\n                                Array.isArray(keyArgs) ? keyArgsFnFromSpecifier(keyArgs) :\n                                    typeof keyArgs === \"function\" ? keyArgs :\n                                        existing.keyFn;\n                        if (typeof read === \"function\")\n                            existing.read = read;\n                        if (typeof merge === \"function\")\n                            existing.merge = merge;\n                    }\n                    if (existing.read || existing.merge) {\n                        existing.keyFn = existing.keyFn || simpleKeyArgsFn;\n                    }\n                });\n            }\n        });\n    };\n    Policies.prototype.setRootTypename = function (which, typename) {\n        var rootId = \"ROOT_\" + which.toUpperCase();\n        var old = this.rootTypenamesById[rootId];\n        if (typename !== old) {\n            invariant(old === which, \"Cannot change root \" + which + \" __typename more than once\");\n            this.rootTypenamesById[rootId] = typename;\n        }\n    };\n    Policies.prototype.addPossibleTypes = function (possibleTypes) {\n        var _this = this;\n        this.usingPossibleTypes = true;\n        Object.keys(possibleTypes).forEach(function (supertype) {\n            var subtypeSet = _this.getSubtypeSet(supertype, true);\n            possibleTypes[supertype].forEach(subtypeSet.add, subtypeSet);\n        });\n    };\n    Policies.prototype.getTypePolicy = function (typename, createIfMissing) {\n        var typePolicies = this.typePolicies;\n        return typePolicies[typename] || (createIfMissing && (typePolicies[typename] = Object.create(null)));\n    };\n    Policies.prototype.getSubtypeSet = function (supertype, createIfMissing) {\n        var policy = this.getTypePolicy(supertype, createIfMissing);\n        if (policy) {\n            return policy.subtypes || (createIfMissing && (policy.subtypes = new Set()));\n        }\n    };\n    Policies.prototype.getFieldPolicy = function (typename, fieldName, createIfMissing) {\n        var typePolicy = this.getTypePolicy(typename, createIfMissing);\n        if (typePolicy) {\n            var fieldPolicies = typePolicy.fields || (createIfMissing && (typePolicy.fields = Object.create(null)));\n            if (fieldPolicies) {\n                return fieldPolicies[fieldName] || (createIfMissing && (fieldPolicies[fieldName] = Object.create(null)));\n            }\n        }\n    };\n    Policies.prototype.fragmentMatches = function (fragment, typename) {\n        var _this = this;\n        if (!fragment.typeCondition)\n            return true;\n        if (!typename)\n            return false;\n        var supertype = fragment.typeCondition.name.value;\n        if (typename === supertype)\n            return true;\n        if (this.usingPossibleTypes) {\n            var workQueue_1 = [this.getSubtypeSet(supertype, false)];\n            for (var i = 0; i < workQueue_1.length; ++i) {\n                var subtypes = workQueue_1[i];\n                if (subtypes) {\n                    if (subtypes.has(typename))\n                        return true;\n                    subtypes.forEach(function (subtype) {\n                        var subsubtypes = _this.getSubtypeSet(subtype, false);\n                        if (subsubtypes && workQueue_1.indexOf(subsubtypes) < 0) {\n                            workQueue_1.push(subsubtypes);\n                        }\n                    });\n                }\n            }\n        }\n        return false;\n    };\n    Policies.prototype.makeFieldValueGetter = function (store) {\n        var policies = this;\n        return function getFieldValue(objectOrReference, storeFieldName) {\n            var fieldValue;\n            if (isReference(objectOrReference)) {\n                var dataId = objectOrReference.__ref;\n                fieldValue = store.getFieldValue(dataId, storeFieldName);\n                if (fieldValue === void 0 && storeFieldName === \"__typename\") {\n                    return policies.rootTypenamesById[dataId];\n                }\n            }\n            else {\n                fieldValue = objectOrReference && objectOrReference[storeFieldName];\n            }\n            if (process.env.NODE_ENV !== \"production\") {\n                maybeDeepFreeze(fieldValue);\n            }\n            return fieldValue;\n        };\n    };\n    Policies.prototype.getStoreFieldName = function (typename, field, variables) {\n        var fieldName = field.name.value;\n        var storeFieldName;\n        if (typeof typename === \"string\") {\n            var policy = this.getFieldPolicy(typename, fieldName, false);\n            var keyFn = policy && policy.keyFn;\n            if (keyFn) {\n                storeFieldName = keyFn(field, {\n                    typename: typename,\n                    variables: variables,\n                    policies: this,\n                }) || fieldName;\n            }\n        }\n        if (storeFieldName === void 0) {\n            storeFieldName = storeKeyNameFromField(field, variables);\n        }\n        return fieldName === fieldNameFromStoreName(storeFieldName)\n            ? storeFieldName\n            : fieldName + \":\" + storeFieldName;\n    };\n    Policies.prototype.readField = function (objectOrReference, nameOrField, getFieldValue, variables, typename) {\n        if (typename === void 0) { typename = getFieldValue(objectOrReference, \"__typename\"); }\n        invariant(objectOrReference, \"Must provide an object or Reference when calling Policies#readField\");\n        var policies = this;\n        var storeFieldName = typeof nameOrField === \"string\" ? nameOrField\n            : policies.getStoreFieldName(typename, nameOrField, variables);\n        var fieldName = fieldNameFromStoreName(storeFieldName);\n        var existing = getFieldValue(objectOrReference, storeFieldName);\n        var policy = policies.getFieldPolicy(typename, fieldName, false);\n        var read = policy && policy.read;\n        if (read) {\n            var storage_1 = policies.storageTrie.lookup(isReference(objectOrReference)\n                ? objectOrReference.__ref\n                : objectOrReference, storeFieldName);\n            policies.fieldDep(storage_1);\n            return read(existing, {\n                args: typeof nameOrField === \"string\" ? null :\n                    argumentsObjectFromField(nameOrField, variables),\n                field: typeof nameOrField === \"string\" ? null : nameOrField,\n                fieldName: fieldName,\n                variables: variables,\n                policies: policies,\n                isReference: isReference,\n                toReference: policies.toReference,\n                storage: storage_1,\n                readField: function (nameOrField, foreignObjOrRef) {\n                    return policies.readField(foreignObjOrRef || objectOrReference, nameOrField, getFieldValue, variables);\n                },\n                invalidate: function () {\n                    policies.fieldDep.dirty(storage_1);\n                },\n            });\n        }\n        return existing;\n    };\n    Policies.prototype.hasMergeFunction = function (typename, fieldName) {\n        var policy = this.getFieldPolicy(typename, fieldName, false);\n        return !!(policy && policy.merge);\n    };\n    Policies.prototype.applyMerges = function (existing, incoming, getFieldValue, variables, storageKeys) {\n        var policies = this;\n        if (isFieldValueToBeMerged(incoming)) {\n            var field = incoming.__field;\n            var fieldName = field.name.value;\n            var policy = policies.getFieldPolicy(incoming.__typename, fieldName, false);\n            var applied = policies.applyMerges(existing, incoming.__value, getFieldValue, variables, storageKeys);\n            var merge = policy && policy.merge;\n            if (merge) {\n                if (process.env.NODE_ENV !== \"production\") {\n                    maybeDeepFreeze(existing);\n                }\n                var storage_2 = storageKeys\n                    ? policies.storageTrie.lookupArray(storageKeys)\n                    : null;\n                return merge(existing, applied, {\n                    args: argumentsObjectFromField(field, variables),\n                    field: field,\n                    fieldName: fieldName,\n                    variables: variables,\n                    policies: policies,\n                    isReference: isReference,\n                    toReference: policies.toReference,\n                    readField: function (nameOrField, foreignObjOrRef) {\n                        return policies.readField(foreignObjOrRef, nameOrField, getFieldValue, variables);\n                    },\n                    storage: storage_2,\n                    invalidate: function () {\n                        if (storage_2) {\n                            policies.fieldDep.dirty(storage_2);\n                        }\n                    },\n                });\n            }\n            return applied;\n        }\n        if (incoming && typeof incoming === \"object\") {\n            var e_1 = existing;\n            var i_1 = incoming;\n            var firstStorageKey_1 = isReference(e_1)\n                ? e_1.__ref\n                : typeof e_1 === \"object\" && e_1;\n            Object.keys(i_1).forEach(function (storeFieldName) {\n                i_1[storeFieldName] = policies.applyMerges(getFieldValue(e_1, storeFieldName), i_1[storeFieldName], getFieldValue, variables, firstStorageKey_1 && [firstStorageKey_1, storeFieldName]);\n            });\n        }\n        return incoming;\n    };\n    return Policies;\n}());\nexport { Policies };\nfunction keyArgsFnFromSpecifier(specifier) {\n    var topLevelArgNames = Object.create(null);\n    specifier.forEach(function (name) {\n        if (typeof name === \"string\") {\n            topLevelArgNames[name] = true;\n        }\n    });\n    return function (field, context) {\n        var fieldName = field.name.value;\n        if (field.arguments && field.arguments.length > 0) {\n            var args_1 = Object.create(null);\n            field.arguments.forEach(function (arg) {\n                if (topLevelArgNames[arg.name.value] === true) {\n                    valueToObjectRepresentation(args_1, arg.name, arg.value, context.variables);\n                }\n            });\n            return fieldName + \":\" + JSON.stringify(computeKeyObject(args_1, specifier));\n        }\n        return fieldName;\n    };\n}\nfunction keyFieldsFnFromSpecifier(specifier) {\n    var trie = new KeyTrie(canUseWeakMap);\n    return function (object, context) {\n        var aliasMap;\n        if (context.selectionSet && context.fragmentMap) {\n            var info = trie.lookupArray([\n                context.selectionSet,\n                context.fragmentMap,\n            ]);\n            aliasMap = info.aliasMap || (info.aliasMap = makeAliasMap(context.selectionSet, context.fragmentMap));\n        }\n        return context.typename + \":\" + JSON.stringify(computeKeyObject(object, specifier, aliasMap));\n    };\n}\nfunction makeAliasMap(selectionSet, fragmentMap) {\n    var map = Object.create(null);\n    var workQueue = new Set([selectionSet]);\n    workQueue.forEach(function (selectionSet) {\n        selectionSet.selections.forEach(function (selection) {\n            if (isField(selection)) {\n                if (selection.alias) {\n                    var responseKey = selection.alias.value;\n                    var storeKey = selection.name.value;\n                    if (storeKey !== responseKey) {\n                        var aliases = map.aliases || (map.aliases = Object.create(null));\n                        aliases[storeKey] = responseKey;\n                    }\n                }\n                if (selection.selectionSet) {\n                    var subsets = map.subsets || (map.subsets = Object.create(null));\n                    subsets[selection.name.value] =\n                        makeAliasMap(selection.selectionSet, fragmentMap);\n                }\n            }\n            else {\n                var fragment = getFragmentFromSelection(selection, fragmentMap);\n                workQueue.add(fragment.selectionSet);\n            }\n        });\n    });\n    return map;\n}\nfunction computeKeyObject(response, specifier, aliasMap) {\n    var keyObj = Object.create(null);\n    var prevKey;\n    specifier.forEach(function (s) {\n        if (Array.isArray(s)) {\n            if (typeof prevKey === \"string\") {\n                var subsets = aliasMap && aliasMap.subsets;\n                var subset = subsets && subsets[prevKey];\n                keyObj[prevKey] = computeKeyObject(response[prevKey], s, subset);\n            }\n        }\n        else {\n            var aliases = aliasMap && aliasMap.aliases;\n            var responseName = aliases && aliases[s] || s;\n            invariant(hasOwn.call(response, responseName), \"Missing field \" + responseName + \" while computing key fields\");\n            keyObj[prevKey = s] = response[responseName];\n        }\n    });\n    return keyObj;\n}\n//# sourceMappingURL=policies.js.map"],"names":[],"mappings":";;;;;;;;;AAQA,IAAI,MAAM,GAAG,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC;AAC7C,AAAO,SAAS,uBAAuB,CAAC,MAAM,EAAE;IAC5C,IAAI,UAAU,GAAG,MAAM,CAAC,UAAU,EAAE,EAAE,GAAG,MAAM,CAAC,EAAE,EAAE,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;IACrE,IAAI,OAAO,UAAU,KAAK,QAAQ,EAAE;QAChC,IAAI,OAAO,EAAE,KAAK,WAAW;YACzB,OAAO,UAAU,GAAG,GAAG,GAAG,EAAE,CAAC;QACjC,IAAI,OAAO,GAAG,KAAK,WAAW;YAC1B,OAAO,UAAU,GAAG,GAAG,GAAG,GAAG,CAAC;KACrC;IACD,OAAO,IAAI,CAAC;CACf;AACD,IAAI,eAAe,GAAG,YAAY,EAAE,OAAO,IAAI,CAAC,EAAE,CAAC;AACnD,IAAI,eAAe,GAAG,UAAU,KAAK,EAAE,EAAE,OAAO,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC;AACpE,AAAG,IAAC,QAAQ,IAAI,YAAY;IACxB,SAAS,QAAQ,CAAC,MAAM,EAAE;QACtB,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,IAAI,MAAM,KAAK,KAAK,CAAC,EAAE,EAAE,MAAM,GAAG,EAAE,CAAC,EAAE;QACvC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACxC,IAAI,CAAC,iBAAiB,GAAG;YACrB,SAAS,EAAE,IAAI;YACf,UAAU,EAAE,OAAO;YACnB,aAAa,EAAE,UAAU;YACzB,iBAAiB,EAAE,cAAc;SACpC,CAAC;QACF,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;QAChC,IAAI,CAAC,WAAW,GAAG,UAAU,MAAM,EAAE,YAAY,EAAE,WAAW,EAAE;YAC5D,IAAI,EAAE,GAAG,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE,YAAY,EAAE,WAAW,CAAC,CAAC;YAC3D,OAAO,EAAE,IAAI,aAAa,CAAC,EAAE,CAAC,CAAC;SAClC,CAAC;QACF,IAAI,CAAC,WAAW,GAAG,IAAI,OAAO,CAAC,IAAI,CAAC,CAAC;QACrC,IAAI,CAAC,QAAQ,GAAG,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,EAAE,gBAAgB,EAAE,uBAAuB,EAAE,EAAE,MAAM,CAAC,CAAC;QAC9E,IAAI,MAAM,CAAC,aAAa,EAAE;YACtB,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;SAC/C;QACD,IAAI,MAAM,CAAC,YAAY,EAAE;YACrB,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;SAC7C;KACJ;IACD,QAAQ,CAAC,SAAS,CAAC,QAAQ,GAAG,UAAU,MAAM,EAAE,YAAY,EAAE,WAAW,EAAE;QACvE,IAAI,QAAQ,GAAG,YAAY,IAAI,WAAW;cACpC,qBAAqB,CAAC,MAAM,EAAE,YAAY,EAAE,WAAW,CAAC;cACxD,MAAM,CAAC,UAAU,CAAC;QACxB,IAAI,OAAO,GAAG;YACV,QAAQ,EAAE,QAAQ;YAClB,YAAY,EAAE,YAAY;YAC1B,WAAW,EAAE,WAAW;YACxB,QAAQ,EAAE,IAAI;SACjB,CAAC;QACF,IAAI,EAAE,CAAC;QACP,IAAI,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;QACjD,IAAI,KAAK,GAAG,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC;QACnC,IAAI,KAAK,EAAE;YACP,EAAE,GAAG,KAAK,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;SAC/B;aACI;YACD,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,gBAAgB;kBAC3B,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,MAAM,EAAE,OAAO,CAAC;kBAC7C,IAAI,CAAC;SACd;QACD,OAAO,EAAE,IAAI,MAAM,CAAC,EAAE,CAAC,CAAC;KAC3B,CAAC;IACF,QAAQ,CAAC,SAAS,CAAC,eAAe,GAAG,UAAU,YAAY,EAAE;QACzD,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,UAAU,QAAQ,EAAE;YAClD,IAAI,QAAQ,GAAG,KAAK,CAAC,aAAa,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;YACnD,IAAI,QAAQ,GAAG,YAAY,CAAC,QAAQ,CAAC,CAAC;YACtC,IAAI,SAAS,GAAG,QAAQ,CAAC,SAAS,EAAE,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;YAC7D,IAAI,QAAQ,CAAC,SAAS;gBAClB,KAAK,CAAC,eAAe,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;YAC7C,IAAI,QAAQ,CAAC,YAAY;gBACrB,KAAK,CAAC,eAAe,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;YAChD,IAAI,QAAQ,CAAC,gBAAgB;gBACzB,KAAK,CAAC,eAAe,CAAC,cAAc,EAAE,QAAQ,CAAC,CAAC;YACpD,QAAQ,CAAC,KAAK;gBACV,SAAS,KAAK,KAAK,GAAG,eAAe;oBACjC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,wBAAwB,CAAC,SAAS,CAAC;wBAC1D,OAAO,SAAS,KAAK,UAAU,GAAG,SAAS,GAAG,KAAK,CAAC,CAAC;YACjE,IAAI,MAAM,EAAE;gBACR,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,UAAU,SAAS,EAAE;oBAC7C,IAAI,QAAQ,GAAG,KAAK,CAAC,cAAc,CAAC,QAAQ,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;oBAC/D,IAAI,QAAQ,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;oBACjC,IAAI,OAAO,QAAQ,KAAK,UAAU,EAAE;wBAChC,QAAQ,CAAC,IAAI,GAAG,QAAQ,CAAC;qBAC5B;yBACI;wBACD,IAAI,OAAO,GAAG,QAAQ,CAAC,OAAO,EAAE,IAAI,GAAG,QAAQ,CAAC,IAAI,EAAE,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;wBAC7E,QAAQ,CAAC,KAAK;4BACV,OAAO,KAAK,KAAK,GAAG,eAAe;gCAC/B,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,sBAAsB,CAAC,OAAO,CAAC;oCACpD,OAAO,OAAO,KAAK,UAAU,GAAG,OAAO;wCACnC,QAAQ,CAAC,KAAK,CAAC;wBAC/B,IAAI,OAAO,IAAI,KAAK,UAAU;4BAC1B,QAAQ,CAAC,IAAI,GAAG,IAAI,CAAC;wBACzB,IAAI,OAAO,KAAK,KAAK,UAAU;4BAC3B,QAAQ,CAAC,KAAK,GAAG,KAAK,CAAC;qBAC9B;oBACD,IAAI,QAAQ,CAAC,IAAI,IAAI,QAAQ,CAAC,KAAK,EAAE;wBACjC,QAAQ,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK,IAAI,eAAe,CAAC;qBACtD;iBACJ,CAAC,CAAC;aACN;SACJ,CAAC,CAAC;KACN,CAAC;IACF,QAAQ,CAAC,SAAS,CAAC,eAAe,GAAG,UAAU,KAAK,EAAE,QAAQ,EAAE;QAC5D,IAAI,MAAM,GAAG,OAAO,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;QAC3C,IAAI,GAAG,GAAG,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;QACzC,IAAI,QAAQ,KAAK,GAAG,EAAE;YAClB,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,GAAG,SAAS,CAAC,GAAG,KAAK,KAAK,EAAE,EAAE,CAAC,GAAG,SAAS,CAAC,GAAG,KAAK,KAAK,EAAE,qBAAqB,GAAG,KAAK,GAAG,4BAA4B,CAAC,CAAC;YAC9J,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,GAAG,QAAQ,CAAC;SAC7C;KACJ,CAAC;IACF,QAAQ,CAAC,SAAS,CAAC,gBAAgB,GAAG,UAAU,aAAa,EAAE;QAC3D,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;QAC/B,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,UAAU,SAAS,EAAE;YACpD,IAAI,UAAU,GAAG,KAAK,CAAC,aAAa,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;YACtD,aAAa,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,GAAG,EAAE,UAAU,CAAC,CAAC;SAChE,CAAC,CAAC;KACN,CAAC;IACF,QAAQ,CAAC,SAAS,CAAC,aAAa,GAAG,UAAU,QAAQ,EAAE,eAAe,EAAE;QACpE,IAAI,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;QACrC,OAAO,YAAY,CAAC,QAAQ,CAAC,KAAK,eAAe,KAAK,YAAY,CAAC,QAAQ,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;KACxG,CAAC;IACF,QAAQ,CAAC,SAAS,CAAC,aAAa,GAAG,UAAU,SAAS,EAAE,eAAe,EAAE;QACrE,IAAI,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,eAAe,CAAC,CAAC;QAC5D,IAAI,MAAM,EAAE;YACR,OAAO,MAAM,CAAC,QAAQ,KAAK,eAAe,KAAK,MAAM,CAAC,QAAQ,GAAG,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC;SAChF;KACJ,CAAC;IACF,QAAQ,CAAC,SAAS,CAAC,cAAc,GAAG,UAAU,QAAQ,EAAE,SAAS,EAAE,eAAe,EAAE;QAChF,IAAI,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,eAAe,CAAC,CAAC;QAC/D,IAAI,UAAU,EAAE;YACZ,IAAI,aAAa,GAAG,UAAU,CAAC,MAAM,KAAK,eAAe,KAAK,UAAU,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACxG,IAAI,aAAa,EAAE;gBACf,OAAO,aAAa,CAAC,SAAS,CAAC,KAAK,eAAe,KAAK,aAAa,CAAC,SAAS,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aAC5G;SACJ;KACJ,CAAC;IACF,QAAQ,CAAC,SAAS,CAAC,eAAe,GAAG,UAAU,QAAQ,EAAE,QAAQ,EAAE;QAC/D,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,QAAQ,CAAC,aAAa;YACvB,OAAO,IAAI,CAAC;QAChB,IAAI,CAAC,QAAQ;YACT,OAAO,KAAK,CAAC;QACjB,IAAI,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC;QAClD,IAAI,QAAQ,KAAK,SAAS;YACtB,OAAO,IAAI,CAAC;QAChB,IAAI,IAAI,CAAC,kBAAkB,EAAE;YACzB,IAAI,WAAW,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC,CAAC;YACzD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;gBACzC,IAAI,QAAQ,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;gBAC9B,IAAI,QAAQ,EAAE;oBACV,IAAI,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC;wBACtB,OAAO,IAAI,CAAC;oBAChB,QAAQ,CAAC,OAAO,CAAC,UAAU,OAAO,EAAE;wBAChC,IAAI,WAAW,GAAG,KAAK,CAAC,aAAa,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;wBACtD,IAAI,WAAW,IAAI,WAAW,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,CAAC,EAAE;4BACrD,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;yBACjC;qBACJ,CAAC,CAAC;iBACN;aACJ;SACJ;QACD,OAAO,KAAK,CAAC;KAChB,CAAC;IACF,QAAQ,CAAC,SAAS,CAAC,oBAAoB,GAAG,UAAU,KAAK,EAAE;QACvD,IAAI,QAAQ,GAAG,IAAI,CAAC;QACpB,OAAO,SAAS,aAAa,CAAC,iBAAiB,EAAE,cAAc,EAAE;YAC7D,IAAI,UAAU,CAAC;YACf,IAAI,WAAW,CAAC,iBAAiB,CAAC,EAAE;gBAChC,IAAI,MAAM,GAAG,iBAAiB,CAAC,KAAK,CAAC;gBACrC,UAAU,GAAG,KAAK,CAAC,aAAa,CAAC,MAAM,EAAE,cAAc,CAAC,CAAC;gBACzD,IAAI,UAAU,KAAK,KAAK,CAAC,IAAI,cAAc,KAAK,YAAY,EAAE;oBAC1D,OAAO,QAAQ,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;iBAC7C;aACJ;iBACI;gBACD,UAAU,GAAG,iBAAiB,IAAI,iBAAiB,CAAC,cAAc,CAAC,CAAC;aACvE;YACD,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,EAAE;gBACvC,eAAe,CAAC,UAAU,CAAC,CAAC;aAC/B;YACD,OAAO,UAAU,CAAC;SACrB,CAAC;KACL,CAAC;IACF,QAAQ,CAAC,SAAS,CAAC,iBAAiB,GAAG,UAAU,QAAQ,EAAE,KAAK,EAAE,SAAS,EAAE;QACzE,IAAI,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC;QACjC,IAAI,cAAc,CAAC;QACnB,IAAI,OAAO,QAAQ,KAAK,QAAQ,EAAE;YAC9B,IAAI,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;YAC7D,IAAI,KAAK,GAAG,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC;YACnC,IAAI,KAAK,EAAE;gBACP,cAAc,GAAG,KAAK,CAAC,KAAK,EAAE;oBAC1B,QAAQ,EAAE,QAAQ;oBAClB,SAAS,EAAE,SAAS;oBACpB,QAAQ,EAAE,IAAI;iBACjB,CAAC,IAAI,SAAS,CAAC;aACnB;SACJ;QACD,IAAI,cAAc,KAAK,KAAK,CAAC,EAAE;YAC3B,cAAc,GAAG,qBAAqB,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;SAC5D;QACD,OAAO,SAAS,KAAK,sBAAsB,CAAC,cAAc,CAAC;cACrD,cAAc;cACd,SAAS,GAAG,GAAG,GAAG,cAAc,CAAC;KAC1C,CAAC;IACF,QAAQ,CAAC,SAAS,CAAC,SAAS,GAAG,UAAU,iBAAiB,EAAE,WAAW,EAAE,aAAa,EAAE,SAAS,EAAE,QAAQ,EAAE;QACzG,IAAI,QAAQ,KAAK,KAAK,CAAC,EAAE,EAAE,QAAQ,GAAG,aAAa,CAAC,iBAAiB,EAAE,YAAY,CAAC,CAAC,EAAE;QACvF,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,GAAG,SAAS,CAAC,iBAAiB,EAAE,EAAE,CAAC,GAAG,SAAS,CAAC,iBAAiB,EAAE,qEAAqE,CAAC,CAAC;QAC/K,IAAI,QAAQ,GAAG,IAAI,CAAC;QACpB,IAAI,cAAc,GAAG,OAAO,WAAW,KAAK,QAAQ,GAAG,WAAW;cAC5D,QAAQ,CAAC,iBAAiB,CAAC,QAAQ,EAAE,WAAW,EAAE,SAAS,CAAC,CAAC;QACnE,IAAI,SAAS,GAAG,sBAAsB,CAAC,cAAc,CAAC,CAAC;QACvD,IAAI,QAAQ,GAAG,aAAa,CAAC,iBAAiB,EAAE,cAAc,CAAC,CAAC;QAChE,IAAI,MAAM,GAAG,QAAQ,CAAC,cAAc,CAAC,QAAQ,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;QACjE,IAAI,IAAI,GAAG,MAAM,IAAI,MAAM,CAAC,IAAI,CAAC;QACjC,IAAI,IAAI,EAAE;YACN,IAAI,SAAS,GAAG,QAAQ,CAAC,WAAW,CAAC,MAAM,CAAC,WAAW,CAAC,iBAAiB,CAAC;kBACpE,iBAAiB,CAAC,KAAK;kBACvB,iBAAiB,EAAE,cAAc,CAAC,CAAC;YACzC,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;YAC7B,OAAO,IAAI,CAAC,QAAQ,EAAE;gBAClB,IAAI,EAAE,OAAO,WAAW,KAAK,QAAQ,GAAG,IAAI;oBACxC,wBAAwB,CAAC,WAAW,EAAE,SAAS,CAAC;gBACpD,KAAK,EAAE,OAAO,WAAW,KAAK,QAAQ,GAAG,IAAI,GAAG,WAAW;gBAC3D,SAAS,EAAE,SAAS;gBACpB,SAAS,EAAE,SAAS;gBACpB,QAAQ,EAAE,QAAQ;gBAClB,WAAW,EAAE,WAAW;gBACxB,WAAW,EAAE,QAAQ,CAAC,WAAW;gBACjC,OAAO,EAAE,SAAS;gBAClB,SAAS,EAAE,UAAU,WAAW,EAAE,eAAe,EAAE;oBAC/C,OAAO,QAAQ,CAAC,SAAS,CAAC,eAAe,IAAI,iBAAiB,EAAE,WAAW,EAAE,aAAa,EAAE,SAAS,CAAC,CAAC;iBAC1G;gBACD,UAAU,EAAE,YAAY;oBACpB,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;iBACtC;aACJ,CAAC,CAAC;SACN;QACD,OAAO,QAAQ,CAAC;KACnB,CAAC;IACF,QAAQ,CAAC,SAAS,CAAC,gBAAgB,GAAG,UAAU,QAAQ,EAAE,SAAS,EAAE;QACjE,IAAI,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;QAC7D,OAAO,CAAC,EAAE,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,CAAC;KACrC,CAAC;IACF,QAAQ,CAAC,SAAS,CAAC,WAAW,GAAG,UAAU,QAAQ,EAAE,QAAQ,EAAE,aAAa,EAAE,SAAS,EAAE,WAAW,EAAE;QAClG,IAAI,QAAQ,GAAG,IAAI,CAAC;QACpB,IAAI,sBAAsB,CAAC,QAAQ,CAAC,EAAE;YAClC,IAAI,KAAK,GAAG,QAAQ,CAAC,OAAO,CAAC;YAC7B,IAAI,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC;YACjC,IAAI,MAAM,GAAG,QAAQ,CAAC,cAAc,CAAC,QAAQ,CAAC,UAAU,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;YAC5E,IAAI,OAAO,GAAG,QAAQ,CAAC,WAAW,CAAC,QAAQ,EAAE,QAAQ,CAAC,OAAO,EAAE,aAAa,EAAE,SAAS,EAAE,WAAW,CAAC,CAAC;YACtG,IAAI,KAAK,GAAG,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC;YACnC,IAAI,KAAK,EAAE;gBACP,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,EAAE;oBACvC,eAAe,CAAC,QAAQ,CAAC,CAAC;iBAC7B;gBACD,IAAI,SAAS,GAAG,WAAW;sBACrB,QAAQ,CAAC,WAAW,CAAC,WAAW,CAAC,WAAW,CAAC;sBAC7C,IAAI,CAAC;gBACX,OAAO,KAAK,CAAC,QAAQ,EAAE,OAAO,EAAE;oBAC5B,IAAI,EAAE,wBAAwB,CAAC,KAAK,EAAE,SAAS,CAAC;oBAChD,KAAK,EAAE,KAAK;oBACZ,SAAS,EAAE,SAAS;oBACpB,SAAS,EAAE,SAAS;oBACpB,QAAQ,EAAE,QAAQ;oBAClB,WAAW,EAAE,WAAW;oBACxB,WAAW,EAAE,QAAQ,CAAC,WAAW;oBACjC,SAAS,EAAE,UAAU,WAAW,EAAE,eAAe,EAAE;wBAC/C,OAAO,QAAQ,CAAC,SAAS,CAAC,eAAe,EAAE,WAAW,EAAE,aAAa,EAAE,SAAS,CAAC,CAAC;qBACrF;oBACD,OAAO,EAAE,SAAS;oBAClB,UAAU,EAAE,YAAY;wBACpB,IAAI,SAAS,EAAE;4BACX,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;yBACtC;qBACJ;iBACJ,CAAC,CAAC;aACN;YACD,OAAO,OAAO,CAAC;SAClB;QACD,IAAI,QAAQ,IAAI,OAAO,QAAQ,KAAK,QAAQ,EAAE;YAC1C,IAAI,GAAG,GAAG,QAAQ,CAAC;YACnB,IAAI,GAAG,GAAG,QAAQ,CAAC;YACnB,IAAI,iBAAiB,GAAG,WAAW,CAAC,GAAG,CAAC;kBAClC,GAAG,CAAC,KAAK;kBACT,OAAO,GAAG,KAAK,QAAQ,IAAI,GAAG,CAAC;YACrC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,UAAU,cAAc,EAAE;gBAC/C,GAAG,CAAC,cAAc,CAAC,GAAG,QAAQ,CAAC,WAAW,CAAC,aAAa,CAAC,GAAG,EAAE,cAAc,CAAC,EAAE,GAAG,CAAC,cAAc,CAAC,EAAE,aAAa,EAAE,SAAS,EAAE,iBAAiB,IAAI,CAAC,iBAAiB,EAAE,cAAc,CAAC,CAAC,CAAC;aAC3L,CAAC,CAAC;SACN;QACD,OAAO,QAAQ,CAAC;KACnB,CAAC;IACF,OAAO,QAAQ,CAAC;CACnB,EAAE,CAAC,CAAC;AACL,AACA,SAAS,sBAAsB,CAAC,SAAS,EAAE;IACvC,IAAI,gBAAgB,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAC3C,SAAS,CAAC,OAAO,CAAC,UAAU,IAAI,EAAE;QAC9B,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;YAC1B,gBAAgB,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC;SACjC;KACJ,CAAC,CAAC;IACH,OAAO,UAAU,KAAK,EAAE,OAAO,EAAE;QAC7B,IAAI,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC;QACjC,IAAI,KAAK,CAAC,SAAS,IAAI,KAAK,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,EAAE;YAC/C,IAAI,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YACjC,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC,UAAU,GAAG,EAAE;gBACnC,IAAI,gBAAgB,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,IAAI,EAAE;oBAC3C,2BAA2B,CAAC,MAAM,EAAE,GAAG,CAAC,IAAI,EAAE,GAAG,CAAC,KAAK,EAAE,OAAO,CAAC,SAAS,CAAC,CAAC;iBAC/E;aACJ,CAAC,CAAC;YACH,OAAO,SAAS,GAAG,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC,CAAC;SAChF;QACD,OAAO,SAAS,CAAC;KACpB,CAAC;CACL;AACD,SAAS,wBAAwB,CAAC,SAAS,EAAE;IACzC,IAAI,IAAI,GAAG,IAAI,OAAO,CAAC,aAAa,CAAC,CAAC;IACtC,OAAO,UAAU,MAAM,EAAE,OAAO,EAAE;QAC9B,IAAI,QAAQ,CAAC;QACb,IAAI,OAAO,CAAC,YAAY,IAAI,OAAO,CAAC,WAAW,EAAE;YAC7C,IAAI,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC;gBACxB,OAAO,CAAC,YAAY;gBACpB,OAAO,CAAC,WAAW;aACtB,CAAC,CAAC;YACH,QAAQ,GAAG,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,QAAQ,GAAG,YAAY,CAAC,OAAO,CAAC,YAAY,EAAE,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;SACzG;QACD,OAAO,OAAO,CAAC,QAAQ,GAAG,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC,MAAM,EAAE,SAAS,EAAE,QAAQ,CAAC,CAAC,CAAC;KACjG,CAAC;CACL;AACD,SAAS,YAAY,CAAC,YAAY,EAAE,WAAW,EAAE;IAC7C,IAAI,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAC9B,IAAI,SAAS,GAAG,IAAI,GAAG,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;IACxC,SAAS,CAAC,OAAO,CAAC,UAAU,YAAY,EAAE;QACtC,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC,UAAU,SAAS,EAAE;YACjD,IAAI,OAAO,CAAC,SAAS,CAAC,EAAE;gBACpB,IAAI,SAAS,CAAC,KAAK,EAAE;oBACjB,IAAI,WAAW,GAAG,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC;oBACxC,IAAI,QAAQ,GAAG,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC;oBACpC,IAAI,QAAQ,KAAK,WAAW,EAAE;wBAC1B,IAAI,OAAO,GAAG,GAAG,CAAC,OAAO,KAAK,GAAG,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;wBACjE,OAAO,CAAC,QAAQ,CAAC,GAAG,WAAW,CAAC;qBACnC;iBACJ;gBACD,IAAI,SAAS,CAAC,YAAY,EAAE;oBACxB,IAAI,OAAO,GAAG,GAAG,CAAC,OAAO,KAAK,GAAG,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;oBACjE,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC;wBACzB,YAAY,CAAC,SAAS,CAAC,YAAY,EAAE,WAAW,CAAC,CAAC;iBACzD;aACJ;iBACI;gBACD,IAAI,QAAQ,GAAG,wBAAwB,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC;gBAChE,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;aACxC;SACJ,CAAC,CAAC;KACN,CAAC,CAAC;IACH,OAAO,GAAG,CAAC;CACd;AACD,SAAS,gBAAgB,CAAC,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE;IACrD,IAAI,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IACjC,IAAI,OAAO,CAAC;IACZ,SAAS,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;QAC3B,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;YAClB,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;gBAC7B,IAAI,OAAO,GAAG,QAAQ,IAAI,QAAQ,CAAC,OAAO,CAAC;gBAC3C,IAAI,MAAM,GAAG,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC;gBACzC,MAAM,CAAC,OAAO,CAAC,GAAG,gBAAgB,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC;aACpE;SACJ;aACI;YACD,IAAI,OAAO,GAAG,QAAQ,IAAI,QAAQ,CAAC,OAAO,CAAC;YAC3C,IAAI,YAAY,GAAG,OAAO,IAAI,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;YAC9C,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,GAAG,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,YAAY,CAAC,EAAE,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,YAAY,CAAC,EAAE,gBAAgB,GAAG,YAAY,GAAG,6BAA6B,CAAC,CAAC;YAC7M,MAAM,CAAC,OAAO,GAAG,CAAC,CAAC,GAAG,QAAQ,CAAC,YAAY,CAAC,CAAC;SAChD;KACJ,CAAC,CAAC;IACH,OAAO,MAAM,CAAC;CACjB;;;;"}