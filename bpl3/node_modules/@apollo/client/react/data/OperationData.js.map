{"version":3,"file":"OperationData.js","sources":["OperationData.js"],"sourcesContent":["import { equal } from '@wry/equality';\nimport { invariant } from 'ts-invariant';\nimport { parser, operationName } from '../parser/parser';\nvar OperationData = (function () {\n    function OperationData(options, context) {\n        this.isMounted = false;\n        this.previousOptions = {};\n        this.context = {};\n        this.options = {};\n        this.options = options || {};\n        this.context = context || {};\n    }\n    OperationData.prototype.getOptions = function () {\n        return this.options;\n    };\n    OperationData.prototype.setOptions = function (newOptions, storePrevious) {\n        if (storePrevious === void 0) { storePrevious = false; }\n        if (storePrevious && !equal(this.options, newOptions)) {\n            this.previousOptions = this.options;\n        }\n        this.options = newOptions;\n    };\n    OperationData.prototype.unmount = function () {\n        this.isMounted = false;\n    };\n    OperationData.prototype.refreshClient = function () {\n        var client = (this.options && this.options.client) ||\n            (this.context && this.context.client);\n        invariant(!!client, 'Could not find \"client\" in the context or passed in as an option. ' +\n            'Wrap the root component in an <ApolloProvider>, or pass an ' +\n            'ApolloClient instance in via options.');\n        var isNew = false;\n        if (client !== this.client) {\n            isNew = true;\n            this.client = client;\n            this.cleanup();\n        }\n        return {\n            client: this.client,\n            isNew: isNew\n        };\n    };\n    OperationData.prototype.verifyDocumentType = function (document, type) {\n        var operation = parser(document);\n        var requiredOperationName = operationName(type);\n        var usedOperationName = operationName(operation.type);\n        invariant(operation.type === type, \"Running a \" + requiredOperationName + \" requires a graphql \" +\n            (requiredOperationName + \", but a \" + usedOperationName + \" was used instead.\"));\n    };\n    return OperationData;\n}());\nexport { OperationData };\n//# sourceMappingURL=OperationData.js.map"],"names":[],"mappings":";;;;AAGG,IAAC,aAAa,IAAI,YAAY;IAC7B,SAAS,aAAa,CAAC,OAAO,EAAE,OAAO,EAAE;QACrC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;QACvB,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;QAC1B,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,OAAO,GAAG,OAAO,IAAI,EAAE,CAAC;QAC7B,IAAI,CAAC,OAAO,GAAG,OAAO,IAAI,EAAE,CAAC;KAChC;IACD,aAAa,CAAC,SAAS,CAAC,UAAU,GAAG,YAAY;QAC7C,OAAO,IAAI,CAAC,OAAO,CAAC;KACvB,CAAC;IACF,aAAa,CAAC,SAAS,CAAC,UAAU,GAAG,UAAU,UAAU,EAAE,aAAa,EAAE;QACtE,IAAI,aAAa,KAAK,KAAK,CAAC,EAAE,EAAE,aAAa,GAAG,KAAK,CAAC,EAAE;QACxD,IAAI,aAAa,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,EAAE,UAAU,CAAC,EAAE;YACnD,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC;SACvC;QACD,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC;KAC7B,CAAC;IACF,aAAa,CAAC,SAAS,CAAC,OAAO,GAAG,YAAY;QAC1C,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;KAC1B,CAAC;IACF,aAAa,CAAC,SAAS,CAAC,aAAa,GAAG,YAAY;QAChD,IAAI,MAAM,GAAG,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM;aAC5C,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAC1C,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,GAAG,SAAS,CAAC,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,MAAM,EAAE,oEAAoE;YACtJ,6DAA6D;YAC7D,uCAAuC,CAAC,CAAC;QAC7C,IAAI,KAAK,GAAG,KAAK,CAAC;QAClB,IAAI,MAAM,KAAK,IAAI,CAAC,MAAM,EAAE;YACxB,KAAK,GAAG,IAAI,CAAC;YACb,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YACrB,IAAI,CAAC,OAAO,EAAE,CAAC;SAClB;QACD,OAAO;YACH,MAAM,EAAE,IAAI,CAAC,MAAM;YACnB,KAAK,EAAE,KAAK;SACf,CAAC;KACL,CAAC;IACF,aAAa,CAAC,SAAS,CAAC,kBAAkB,GAAG,UAAU,QAAQ,EAAE,IAAI,EAAE;QACnE,IAAI,SAAS,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;QACjC,IAAI,qBAAqB,GAAG,aAAa,CAAC,IAAI,CAAC,CAAC;QAChD,IAAI,iBAAiB,GAAG,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QACtD,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,GAAG,SAAS,CAAC,SAAS,CAAC,IAAI,KAAK,IAAI,EAAE,EAAE,CAAC,GAAG,SAAS,CAAC,SAAS,CAAC,IAAI,KAAK,IAAI,EAAE,YAAY,GAAG,qBAAqB,GAAG,sBAAsB;aAC5K,qBAAqB,GAAG,UAAU,GAAG,iBAAiB,GAAG,oBAAoB,CAAC,CAAC,CAAC;KACxF,CAAC;IACF,OAAO,aAAa,CAAC;CACxB,EAAE,CAAC;;;;"}