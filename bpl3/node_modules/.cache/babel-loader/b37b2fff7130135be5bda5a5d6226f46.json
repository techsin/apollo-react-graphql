{"ast":null,"code":"function queryFromPojo(obj) {\n  var op = {\n    kind: 'OperationDefinition',\n    operation: 'query',\n    name: {\n      kind: 'Name',\n      value: 'GeneratedClientQuery'\n    },\n    selectionSet: selectionSetFromObj(obj)\n  };\n  var out = {\n    kind: 'Document',\n    definitions: [op]\n  };\n  return out;\n}\n\nfunction fragmentFromPojo(obj, typename) {\n  var frag = {\n    kind: 'FragmentDefinition',\n    typeCondition: {\n      kind: 'NamedType',\n      name: {\n        kind: 'Name',\n        value: typename || '__FakeType'\n      }\n    },\n    name: {\n      kind: 'Name',\n      value: 'GeneratedClientQuery'\n    },\n    selectionSet: selectionSetFromObj(obj)\n  };\n  var out = {\n    kind: 'Document',\n    definitions: [frag]\n  };\n  return out;\n}\n\nfunction selectionSetFromObj(obj) {\n  if (typeof obj === 'number' || typeof obj === 'boolean' || typeof obj === 'string' || typeof obj === 'undefined' || obj === null) {\n    return null;\n  }\n\n  if (Array.isArray(obj)) {\n    return selectionSetFromObj(obj[0]);\n  }\n\n  var selections = [];\n  Object.keys(obj).forEach(function (key) {\n    var nestedSelSet = selectionSetFromObj(obj[key]);\n    var field = {\n      kind: 'Field',\n      name: {\n        kind: 'Name',\n        value: key\n      },\n      selectionSet: nestedSelSet || undefined\n    };\n    selections.push(field);\n  });\n  var selectionSet = {\n    kind: 'SelectionSet',\n    selections: selections\n  };\n  return selectionSet;\n}\n\nvar justTypenameQuery = {\n  kind: 'Document',\n  definitions: [{\n    kind: 'OperationDefinition',\n    operation: 'query',\n    name: null,\n    variableDefinitions: null,\n    directives: [],\n    selectionSet: {\n      kind: 'SelectionSet',\n      selections: [{\n        kind: 'Field',\n        alias: null,\n        name: {\n          kind: 'Name',\n          value: '__typename'\n        },\n        arguments: [],\n        directives: [],\n        selectionSet: null\n      }]\n    }\n  }]\n};\nexport { fragmentFromPojo, justTypenameQuery, queryFromPojo };","map":{"version":3,"sources":["utils.js"],"names":[],"mappings":"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","sourcesContent":["export function queryFromPojo(obj) {\n    var op = {\n        kind: 'OperationDefinition',\n        operation: 'query',\n        name: {\n            kind: 'Name',\n            value: 'GeneratedClientQuery',\n        },\n        selectionSet: selectionSetFromObj(obj),\n    };\n    var out = {\n        kind: 'Document',\n        definitions: [op],\n    };\n    return out;\n}\nexport function fragmentFromPojo(obj, typename) {\n    var frag = {\n        kind: 'FragmentDefinition',\n        typeCondition: {\n            kind: 'NamedType',\n            name: {\n                kind: 'Name',\n                value: typename || '__FakeType',\n            },\n        },\n        name: {\n            kind: 'Name',\n            value: 'GeneratedClientQuery',\n        },\n        selectionSet: selectionSetFromObj(obj),\n    };\n    var out = {\n        kind: 'Document',\n        definitions: [frag],\n    };\n    return out;\n}\nfunction selectionSetFromObj(obj) {\n    if (typeof obj === 'number' ||\n        typeof obj === 'boolean' ||\n        typeof obj === 'string' ||\n        typeof obj === 'undefined' ||\n        obj === null) {\n        return null;\n    }\n    if (Array.isArray(obj)) {\n        return selectionSetFromObj(obj[0]);\n    }\n    var selections = [];\n    Object.keys(obj).forEach(function (key) {\n        var nestedSelSet = selectionSetFromObj(obj[key]);\n        var field = {\n            kind: 'Field',\n            name: {\n                kind: 'Name',\n                value: key,\n            },\n            selectionSet: nestedSelSet || undefined,\n        };\n        selections.push(field);\n    });\n    var selectionSet = {\n        kind: 'SelectionSet',\n        selections: selections,\n    };\n    return selectionSet;\n}\nexport var justTypenameQuery = {\n    kind: 'Document',\n    definitions: [\n        {\n            kind: 'OperationDefinition',\n            operation: 'query',\n            name: null,\n            variableDefinitions: null,\n            directives: [],\n            selectionSet: {\n                kind: 'SelectionSet',\n                selections: [\n                    {\n                        kind: 'Field',\n                        alias: null,\n                        name: {\n                            kind: 'Name',\n                            value: '__typename',\n                        },\n                        arguments: [],\n                        directives: [],\n                        selectionSet: null,\n                    },\n                ],\n            },\n        },\n    ],\n};\n//# sourceMappingURL=utils.js.map"]},"metadata":{},"sourceType":"module"}