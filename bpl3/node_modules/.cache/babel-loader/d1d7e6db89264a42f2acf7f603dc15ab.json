{"ast":null,"code":"import { invariant } from 'ts-invariant';\nimport { requireReactLazily } from '../react.js';\nimport { getApolloContext } from '../context/ApolloContext.js';\n\nfunction useApolloClient() {\n  var React = requireReactLazily();\n  var client = React.useContext(getApolloContext()).client;\n  process.env.NODE_ENV === \"production\" ? invariant(client, 7) : invariant(client, 'No Apollo Client instance can be found. Please ensure that you ' + 'have called `ApolloProvider` higher up in your tree.');\n  return client;\n}\n\nexport { useApolloClient };","map":{"version":3,"sources":["useApolloClient.js"],"names":[],"mappings":";;;;AAGO,SAAS,eAAT,GAA2B;AAC9B,MAAI,KAAK,GAAG,kBAAkB,EAA9B;AACA,MAAI,MAAM,GAAG,KAAK,CAAC,UAAN,CAAiB,gBAAgB,EAAjC,EAAqC,MAAlD;AACA,EAAA,OAAO,CAAC,GAAR,CAAY,QAAZ,KAAyB,YAAzB,GAAwC,SAAS,CAAC,MAAD,EAAS,CAAT,CAAjD,GAA+D,SAAS,CAAC,MAAD,EAAS,oEAC7E,sDADoE,CAAxE;AAEA,SAAO,MAAP;AACH","sourcesContent":["import { invariant } from 'ts-invariant';\nimport { getApolloContext } from '../context/ApolloContext';\nimport { requireReactLazily } from '../react';\nexport function useApolloClient() {\n    var React = requireReactLazily();\n    var client = React.useContext(getApolloContext()).client;\n    invariant(client, 'No Apollo Client instance can be found. Please ensure that you ' +\n        'have called `ApolloProvider` higher up in your tree.');\n    return client;\n}\n//# sourceMappingURL=useApolloClient.js.map"]},"metadata":{},"sourceType":"module"}