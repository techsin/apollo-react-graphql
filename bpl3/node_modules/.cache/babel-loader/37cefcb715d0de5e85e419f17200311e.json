{"ast":null,"code":"var _jsxFileName = \"/Users/iacloaner/projs/react-graphql/bpl/src/App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { useQuery, gql } from '@apollo/client';\n\nfunction App() {\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    className: \"App-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(GetAuhtors, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  })));\n}\n\nconst GET_AUTHORS = gql`\n  {\n    authors {\n      name\n      books\n    }\n  }\n`;\n\nfunction GetAuhtors() {\n  const _useQuery = useQuery(GET_AUTHORS),\n        loading = _useQuery.loading,\n        error = _useQuery.error,\n        data = _useQuery.data;\n\n  if (loading) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Loading...\");\n  if (error) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Error :(\");\n  return data.authors.map(({\n    name,\n    books\n  }) => React.createElement(\"div\", {\n    key: name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, name, \": \", books)));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/iacloaner/projs/react-graphql/bpl/src/App.js"],"names":["React","useQuery","gql","App","GET_AUTHORS","GetAuhtors","loading","error","data","authors","map","name","books"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAO,WAAP;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;;AAEA,SAASC,GAAT,GAAe;AACb,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF;AAOD;;AAED,MAAMC,WAAW,GAAGF,GAAI;;;;;;;CAAxB;;AASA,SAASG,UAAT,GAAsB;AAAA,oBACaJ,QAAQ,CAACG,WAAD,CADrB;AAAA,QACZE,OADY,aACZA,OADY;AAAA,QACHC,KADG,aACHA,KADG;AAAA,QACIC,IADJ,aACIA,IADJ;;AAGpB,MAAIF,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AAEX,SAAOC,IAAI,CAACC,OAAL,CAAaC,GAAb,CAAiB,CAAC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,GAAD,KACtB;AAAK,IAAA,GAAG,EAAED,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,IADH,QACWC,KADX,CADF,CADK,CAAP;AAOD;;AAED,eAAeT,GAAf","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { useQuery, gql } from '@apollo/client';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <GetAuhtors/>\n      </header>\n    </div>\n  );\n}\n\nconst GET_AUTHORS = gql`\n  {\n    authors {\n      name\n      books\n    }\n  }\n`;\n\nfunction GetAuhtors() {\n  const { loading, error, data } = useQuery(GET_AUTHORS);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error :(</p>;\n\n  return data.authors.map(({ name, books }) => (\n    <div key={name}>\n      <p>\n        {name}: {books}\n      </p>\n    </div>\n  ));\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}