{"ast":null,"code":"import { InvariantError } from 'ts-invariant';\n\nvar checkFetcher = function (fetcher) {\n  if (!fetcher && typeof fetch === 'undefined') {\n    var library = 'unfetch';\n    if (typeof window === 'undefined') library = 'node-fetch';\n    throw process.env.NODE_ENV === \"production\" ? new InvariantError(22) : new InvariantError('\"fetch\" has not been found globally and no fetcher has been ' + 'configured. To fix this, install a fetch package ' + (\"(like https://www.npmjs.com/package/\" + library + \"), instantiate the \") + 'fetcher, and pass it into your `HttpLink` constructor. For example:' + '\\n\\n' + (\"import fetch from '\" + library + \"';\\n\") + \"import { ApolloClient, HttpLink } from '@apollo/client';\\n\" + 'const client = new ApolloClient({\\n' + \"  link: new HttpLink({ uri: '/graphq', fetch })\\n\" + '});');\n  }\n};\n\nexport { checkFetcher };","map":{"version":3,"sources":["checkFetcher.js"],"names":[],"mappings":";;AACU,IAAC,YAAY,GAAG,UAAU,OAAV,EAAmB;AACzC,MAAI,CAAC,OAAD,IAAY,OAAO,KAAP,KAAiB,WAAjC,EAA8C;AAC1C,QAAI,OAAO,GAAG,SAAd;AACA,QAAI,OAAO,MAAP,KAAkB,WAAtB,EACI,OAAO,GAAG,YAAV;AACJ,UAAM,OAAO,CAAC,GAAR,CAAY,QAAZ,KAAyB,YAAzB,GAAwC,IAAI,cAAJ,CAAmB,EAAnB,CAAxC,GAAiE,IAAI,cAAJ,CAAmB,iEACtF,mDADsF,IAErF,yCAAyC,OAAzC,GAAmD,qBAFkC,IAGtF,qEAHsF,GAItF,MAJsF,IAKrF,wBAAwB,OAAxB,GAAkC,MALmD,IAMtF,4DANsF,GAOtF,qCAPsF,GAQtF,mDARsF,GAStF,KATmE,CAAvE;AAUH;AACJ,CAhBS","sourcesContent":["import { InvariantError } from 'ts-invariant';\nexport var checkFetcher = function (fetcher) {\n    if (!fetcher && typeof fetch === 'undefined') {\n        var library = 'unfetch';\n        if (typeof window === 'undefined')\n            library = 'node-fetch';\n        throw new InvariantError('\"fetch\" has not been found globally and no fetcher has been ' +\n            'configured. To fix this, install a fetch package ' +\n            (\"(like https://www.npmjs.com/package/\" + library + \"), instantiate the \") +\n            'fetcher, and pass it into your `HttpLink` constructor. For example:' +\n            '\\n\\n' +\n            (\"import fetch from '\" + library + \"';\\n\") +\n            \"import { ApolloClient, HttpLink } from '@apollo/client';\\n\" +\n            'const client = new ApolloClient({\\n' +\n            \"  link: new HttpLink({ uri: '/graphq', fetch })\\n\" +\n            '});');\n    }\n};\n//# sourceMappingURL=checkFetcher.js.map"]},"metadata":{},"sourceType":"module"}